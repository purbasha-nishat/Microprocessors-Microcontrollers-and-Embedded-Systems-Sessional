
RFID Module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001584  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000013a  00800060  00001584  00001618  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000012  0080019a  0080019a  00001752  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001752  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001784  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  000017c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f7d  00000000  00000000  000018a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000774  00000000  00000000  00003825  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e57  00000000  00000000  00003f99  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000254  00000000  00000000  00004df0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000515  00000000  00000000  00005044  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000019bb  00000000  00000000  00005559  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00006f14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__vector_2>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <Lcd4_Write_Char+0x12>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <pinChange+0x240>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <pinChange+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	11 e0       	ldi	r17, 0x01	; 1
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e4 e8       	ldi	r30, 0x84	; 132
     162:	f5 e1       	ldi	r31, 0x15	; 21
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	aa 39       	cpi	r26, 0x9A	; 154
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	21 e0       	ldi	r18, 0x01	; 1
     172:	aa e9       	ldi	r26, 0x9A	; 154
     174:	b1 e0       	ldi	r27, 0x01	; 1
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	ac 3a       	cpi	r26, 0xAC	; 172
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <main>
     184:	0c 94 c0 0a 	jmp	0x1580	; 0x1580 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <pinChange>:
}

void Lcd4_Shift_Right()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x0C);
     18c:	67 2b       	or	r22, r23
     18e:	09 f0       	breq	.+2      	; 0x192 <pinChange+0x6>
     190:	df c0       	rjmp	.+446    	; 0x350 <pinChange+0x1c4>
     192:	00 97       	sbiw	r24, 0x00	; 0
     194:	21 f4       	brne	.+8      	; 0x19e <pinChange+0x12>
     196:	8b b3       	in	r24, 0x1b	; 27
     198:	8e 7f       	andi	r24, 0xFE	; 254
     19a:	8b bb       	out	0x1b, r24	; 27
     19c:	08 95       	ret
     19e:	81 30       	cpi	r24, 0x01	; 1
     1a0:	91 05       	cpc	r25, r1
     1a2:	21 f4       	brne	.+8      	; 0x1ac <pinChange+0x20>
     1a4:	8b b3       	in	r24, 0x1b	; 27
     1a6:	8d 7f       	andi	r24, 0xFD	; 253
     1a8:	8b bb       	out	0x1b, r24	; 27
     1aa:	08 95       	ret
     1ac:	82 30       	cpi	r24, 0x02	; 2
     1ae:	91 05       	cpc	r25, r1
     1b0:	21 f4       	brne	.+8      	; 0x1ba <pinChange+0x2e>
     1b2:	8b b3       	in	r24, 0x1b	; 27
     1b4:	8b 7f       	andi	r24, 0xFB	; 251
     1b6:	8b bb       	out	0x1b, r24	; 27
     1b8:	08 95       	ret
     1ba:	83 30       	cpi	r24, 0x03	; 3
     1bc:	91 05       	cpc	r25, r1
     1be:	21 f4       	brne	.+8      	; 0x1c8 <pinChange+0x3c>
     1c0:	8b b3       	in	r24, 0x1b	; 27
     1c2:	87 7f       	andi	r24, 0xF7	; 247
     1c4:	8b bb       	out	0x1b, r24	; 27
     1c6:	08 95       	ret
     1c8:	84 30       	cpi	r24, 0x04	; 4
     1ca:	91 05       	cpc	r25, r1
     1cc:	21 f4       	brne	.+8      	; 0x1d6 <pinChange+0x4a>
     1ce:	8b b3       	in	r24, 0x1b	; 27
     1d0:	8f 7e       	andi	r24, 0xEF	; 239
     1d2:	8b bb       	out	0x1b, r24	; 27
     1d4:	08 95       	ret
     1d6:	85 30       	cpi	r24, 0x05	; 5
     1d8:	91 05       	cpc	r25, r1
     1da:	21 f4       	brne	.+8      	; 0x1e4 <pinChange+0x58>
     1dc:	8b b3       	in	r24, 0x1b	; 27
     1de:	8f 7d       	andi	r24, 0xDF	; 223
     1e0:	8b bb       	out	0x1b, r24	; 27
     1e2:	08 95       	ret
     1e4:	86 30       	cpi	r24, 0x06	; 6
     1e6:	91 05       	cpc	r25, r1
     1e8:	21 f4       	brne	.+8      	; 0x1f2 <pinChange+0x66>
     1ea:	8b b3       	in	r24, 0x1b	; 27
     1ec:	8f 7b       	andi	r24, 0xBF	; 191
     1ee:	8b bb       	out	0x1b, r24	; 27
     1f0:	08 95       	ret
     1f2:	87 30       	cpi	r24, 0x07	; 7
     1f4:	91 05       	cpc	r25, r1
     1f6:	21 f4       	brne	.+8      	; 0x200 <pinChange+0x74>
     1f8:	8b b3       	in	r24, 0x1b	; 27
     1fa:	8f 77       	andi	r24, 0x7F	; 127
     1fc:	8b bb       	out	0x1b, r24	; 27
     1fe:	08 95       	ret
     200:	8a 30       	cpi	r24, 0x0A	; 10
     202:	91 05       	cpc	r25, r1
     204:	21 f4       	brne	.+8      	; 0x20e <pinChange+0x82>
     206:	88 b3       	in	r24, 0x18	; 24
     208:	8e 7f       	andi	r24, 0xFE	; 254
     20a:	88 bb       	out	0x18, r24	; 24
     20c:	08 95       	ret
     20e:	8b 30       	cpi	r24, 0x0B	; 11
     210:	91 05       	cpc	r25, r1
     212:	21 f4       	brne	.+8      	; 0x21c <pinChange+0x90>
     214:	88 b3       	in	r24, 0x18	; 24
     216:	8d 7f       	andi	r24, 0xFD	; 253
     218:	88 bb       	out	0x18, r24	; 24
     21a:	08 95       	ret
     21c:	8c 30       	cpi	r24, 0x0C	; 12
     21e:	91 05       	cpc	r25, r1
     220:	21 f4       	brne	.+8      	; 0x22a <pinChange+0x9e>
     222:	88 b3       	in	r24, 0x18	; 24
     224:	8b 7f       	andi	r24, 0xFB	; 251
     226:	88 bb       	out	0x18, r24	; 24
     228:	08 95       	ret
     22a:	8d 30       	cpi	r24, 0x0D	; 13
     22c:	91 05       	cpc	r25, r1
     22e:	21 f4       	brne	.+8      	; 0x238 <pinChange+0xac>
     230:	88 b3       	in	r24, 0x18	; 24
     232:	87 7f       	andi	r24, 0xF7	; 247
     234:	88 bb       	out	0x18, r24	; 24
     236:	08 95       	ret
     238:	8e 30       	cpi	r24, 0x0E	; 14
     23a:	91 05       	cpc	r25, r1
     23c:	21 f4       	brne	.+8      	; 0x246 <pinChange+0xba>
     23e:	88 b3       	in	r24, 0x18	; 24
     240:	8f 7e       	andi	r24, 0xEF	; 239
     242:	88 bb       	out	0x18, r24	; 24
     244:	08 95       	ret
     246:	8f 30       	cpi	r24, 0x0F	; 15
     248:	91 05       	cpc	r25, r1
     24a:	21 f4       	brne	.+8      	; 0x254 <pinChange+0xc8>
     24c:	88 b3       	in	r24, 0x18	; 24
     24e:	8f 7d       	andi	r24, 0xDF	; 223
     250:	88 bb       	out	0x18, r24	; 24
     252:	08 95       	ret
     254:	80 31       	cpi	r24, 0x10	; 16
     256:	91 05       	cpc	r25, r1
     258:	21 f4       	brne	.+8      	; 0x262 <pinChange+0xd6>
     25a:	88 b3       	in	r24, 0x18	; 24
     25c:	8f 7b       	andi	r24, 0xBF	; 191
     25e:	88 bb       	out	0x18, r24	; 24
     260:	08 95       	ret
     262:	81 31       	cpi	r24, 0x11	; 17
     264:	91 05       	cpc	r25, r1
     266:	21 f4       	brne	.+8      	; 0x270 <pinChange+0xe4>
     268:	88 b3       	in	r24, 0x18	; 24
     26a:	8f 77       	andi	r24, 0x7F	; 127
     26c:	88 bb       	out	0x18, r24	; 24
     26e:	08 95       	ret
     270:	84 31       	cpi	r24, 0x14	; 20
     272:	91 05       	cpc	r25, r1
     274:	21 f4       	brne	.+8      	; 0x27e <pinChange+0xf2>
     276:	85 b3       	in	r24, 0x15	; 21
     278:	8e 7f       	andi	r24, 0xFE	; 254
     27a:	85 bb       	out	0x15, r24	; 21
     27c:	08 95       	ret
     27e:	85 31       	cpi	r24, 0x15	; 21
     280:	91 05       	cpc	r25, r1
     282:	21 f4       	brne	.+8      	; 0x28c <pinChange+0x100>
     284:	85 b3       	in	r24, 0x15	; 21
     286:	8d 7f       	andi	r24, 0xFD	; 253
     288:	85 bb       	out	0x15, r24	; 21
     28a:	08 95       	ret
     28c:	86 31       	cpi	r24, 0x16	; 22
     28e:	91 05       	cpc	r25, r1
     290:	21 f4       	brne	.+8      	; 0x29a <pinChange+0x10e>
     292:	85 b3       	in	r24, 0x15	; 21
     294:	8b 7f       	andi	r24, 0xFB	; 251
     296:	85 bb       	out	0x15, r24	; 21
     298:	08 95       	ret
     29a:	87 31       	cpi	r24, 0x17	; 23
     29c:	91 05       	cpc	r25, r1
     29e:	21 f4       	brne	.+8      	; 0x2a8 <pinChange+0x11c>
     2a0:	85 b3       	in	r24, 0x15	; 21
     2a2:	87 7f       	andi	r24, 0xF7	; 247
     2a4:	85 bb       	out	0x15, r24	; 21
     2a6:	08 95       	ret
     2a8:	88 31       	cpi	r24, 0x18	; 24
     2aa:	91 05       	cpc	r25, r1
     2ac:	21 f4       	brne	.+8      	; 0x2b6 <pinChange+0x12a>
     2ae:	85 b3       	in	r24, 0x15	; 21
     2b0:	8f 7e       	andi	r24, 0xEF	; 239
     2b2:	85 bb       	out	0x15, r24	; 21
     2b4:	08 95       	ret
     2b6:	89 31       	cpi	r24, 0x19	; 25
     2b8:	91 05       	cpc	r25, r1
     2ba:	21 f4       	brne	.+8      	; 0x2c4 <pinChange+0x138>
     2bc:	85 b3       	in	r24, 0x15	; 21
     2be:	8f 7d       	andi	r24, 0xDF	; 223
     2c0:	85 bb       	out	0x15, r24	; 21
     2c2:	08 95       	ret
     2c4:	8a 31       	cpi	r24, 0x1A	; 26
     2c6:	91 05       	cpc	r25, r1
     2c8:	21 f4       	brne	.+8      	; 0x2d2 <pinChange+0x146>
     2ca:	85 b3       	in	r24, 0x15	; 21
     2cc:	8f 7b       	andi	r24, 0xBF	; 191
     2ce:	85 bb       	out	0x15, r24	; 21
     2d0:	08 95       	ret
     2d2:	8b 31       	cpi	r24, 0x1B	; 27
     2d4:	91 05       	cpc	r25, r1
     2d6:	21 f4       	brne	.+8      	; 0x2e0 <pinChange+0x154>
     2d8:	85 b3       	in	r24, 0x15	; 21
     2da:	8f 77       	andi	r24, 0x7F	; 127
     2dc:	85 bb       	out	0x15, r24	; 21
     2de:	08 95       	ret
     2e0:	8e 31       	cpi	r24, 0x1E	; 30
     2e2:	91 05       	cpc	r25, r1
     2e4:	21 f4       	brne	.+8      	; 0x2ee <pinChange+0x162>
     2e6:	82 b3       	in	r24, 0x12	; 18
     2e8:	8e 7f       	andi	r24, 0xFE	; 254
     2ea:	82 bb       	out	0x12, r24	; 18
     2ec:	08 95       	ret
     2ee:	8f 31       	cpi	r24, 0x1F	; 31
     2f0:	91 05       	cpc	r25, r1
     2f2:	21 f4       	brne	.+8      	; 0x2fc <pinChange+0x170>
     2f4:	82 b3       	in	r24, 0x12	; 18
     2f6:	8d 7f       	andi	r24, 0xFD	; 253
     2f8:	82 bb       	out	0x12, r24	; 18
     2fa:	08 95       	ret
     2fc:	80 32       	cpi	r24, 0x20	; 32
     2fe:	91 05       	cpc	r25, r1
     300:	21 f4       	brne	.+8      	; 0x30a <pinChange+0x17e>
     302:	82 b3       	in	r24, 0x12	; 18
     304:	8b 7f       	andi	r24, 0xFB	; 251
     306:	82 bb       	out	0x12, r24	; 18
     308:	08 95       	ret
     30a:	81 32       	cpi	r24, 0x21	; 33
     30c:	91 05       	cpc	r25, r1
     30e:	21 f4       	brne	.+8      	; 0x318 <pinChange+0x18c>
     310:	82 b3       	in	r24, 0x12	; 18
     312:	87 7f       	andi	r24, 0xF7	; 247
     314:	82 bb       	out	0x12, r24	; 18
     316:	08 95       	ret
     318:	82 32       	cpi	r24, 0x22	; 34
     31a:	91 05       	cpc	r25, r1
     31c:	21 f4       	brne	.+8      	; 0x326 <pinChange+0x19a>
     31e:	82 b3       	in	r24, 0x12	; 18
     320:	8f 7e       	andi	r24, 0xEF	; 239
     322:	82 bb       	out	0x12, r24	; 18
     324:	08 95       	ret
     326:	83 32       	cpi	r24, 0x23	; 35
     328:	91 05       	cpc	r25, r1
     32a:	21 f4       	brne	.+8      	; 0x334 <pinChange+0x1a8>
     32c:	82 b3       	in	r24, 0x12	; 18
     32e:	8f 7d       	andi	r24, 0xDF	; 223
     330:	82 bb       	out	0x12, r24	; 18
     332:	08 95       	ret
     334:	84 32       	cpi	r24, 0x24	; 36
     336:	91 05       	cpc	r25, r1
     338:	21 f4       	brne	.+8      	; 0x342 <pinChange+0x1b6>
     33a:	82 b3       	in	r24, 0x12	; 18
     33c:	8f 7b       	andi	r24, 0xBF	; 191
     33e:	82 bb       	out	0x12, r24	; 18
     340:	08 95       	ret
     342:	85 97       	sbiw	r24, 0x25	; 37
     344:	09 f0       	breq	.+2      	; 0x348 <pinChange+0x1bc>
     346:	e1 c0       	rjmp	.+450    	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
     348:	82 b3       	in	r24, 0x12	; 18
     34a:	8f 77       	andi	r24, 0x7F	; 127
     34c:	82 bb       	out	0x12, r24	; 18
     34e:	08 95       	ret
     350:	00 97       	sbiw	r24, 0x00	; 0
     352:	21 f4       	brne	.+8      	; 0x35c <pinChange+0x1d0>
     354:	8b b3       	in	r24, 0x1b	; 27
     356:	81 60       	ori	r24, 0x01	; 1
     358:	8b bb       	out	0x1b, r24	; 27
     35a:	08 95       	ret
     35c:	81 30       	cpi	r24, 0x01	; 1
     35e:	91 05       	cpc	r25, r1
     360:	21 f4       	brne	.+8      	; 0x36a <pinChange+0x1de>
     362:	8b b3       	in	r24, 0x1b	; 27
     364:	82 60       	ori	r24, 0x02	; 2
     366:	8b bb       	out	0x1b, r24	; 27
     368:	08 95       	ret
     36a:	82 30       	cpi	r24, 0x02	; 2
     36c:	91 05       	cpc	r25, r1
     36e:	21 f4       	brne	.+8      	; 0x378 <pinChange+0x1ec>
     370:	8b b3       	in	r24, 0x1b	; 27
     372:	84 60       	ori	r24, 0x04	; 4
     374:	8b bb       	out	0x1b, r24	; 27
     376:	08 95       	ret
     378:	83 30       	cpi	r24, 0x03	; 3
     37a:	91 05       	cpc	r25, r1
     37c:	21 f4       	brne	.+8      	; 0x386 <pinChange+0x1fa>
     37e:	8b b3       	in	r24, 0x1b	; 27
     380:	88 60       	ori	r24, 0x08	; 8
     382:	8b bb       	out	0x1b, r24	; 27
     384:	08 95       	ret
     386:	84 30       	cpi	r24, 0x04	; 4
     388:	91 05       	cpc	r25, r1
     38a:	21 f4       	brne	.+8      	; 0x394 <pinChange+0x208>
     38c:	8b b3       	in	r24, 0x1b	; 27
     38e:	80 61       	ori	r24, 0x10	; 16
     390:	8b bb       	out	0x1b, r24	; 27
     392:	08 95       	ret
     394:	85 30       	cpi	r24, 0x05	; 5
     396:	91 05       	cpc	r25, r1
     398:	21 f4       	brne	.+8      	; 0x3a2 <pinChange+0x216>
     39a:	8b b3       	in	r24, 0x1b	; 27
     39c:	80 62       	ori	r24, 0x20	; 32
     39e:	8b bb       	out	0x1b, r24	; 27
     3a0:	08 95       	ret
     3a2:	86 30       	cpi	r24, 0x06	; 6
     3a4:	91 05       	cpc	r25, r1
     3a6:	21 f4       	brne	.+8      	; 0x3b0 <pinChange+0x224>
     3a8:	8b b3       	in	r24, 0x1b	; 27
     3aa:	80 64       	ori	r24, 0x40	; 64
     3ac:	8b bb       	out	0x1b, r24	; 27
     3ae:	08 95       	ret
     3b0:	87 30       	cpi	r24, 0x07	; 7
     3b2:	91 05       	cpc	r25, r1
     3b4:	21 f4       	brne	.+8      	; 0x3be <pinChange+0x232>
     3b6:	8b b3       	in	r24, 0x1b	; 27
     3b8:	80 68       	ori	r24, 0x80	; 128
     3ba:	8b bb       	out	0x1b, r24	; 27
     3bc:	08 95       	ret
     3be:	8a 30       	cpi	r24, 0x0A	; 10
     3c0:	91 05       	cpc	r25, r1
     3c2:	21 f4       	brne	.+8      	; 0x3cc <pinChange+0x240>
     3c4:	88 b3       	in	r24, 0x18	; 24
     3c6:	81 60       	ori	r24, 0x01	; 1
     3c8:	88 bb       	out	0x18, r24	; 24
     3ca:	08 95       	ret
     3cc:	8b 30       	cpi	r24, 0x0B	; 11
     3ce:	91 05       	cpc	r25, r1
     3d0:	21 f4       	brne	.+8      	; 0x3da <pinChange+0x24e>
     3d2:	88 b3       	in	r24, 0x18	; 24
     3d4:	82 60       	ori	r24, 0x02	; 2
     3d6:	88 bb       	out	0x18, r24	; 24
     3d8:	08 95       	ret
     3da:	8c 30       	cpi	r24, 0x0C	; 12
     3dc:	91 05       	cpc	r25, r1
     3de:	21 f4       	brne	.+8      	; 0x3e8 <pinChange+0x25c>
     3e0:	88 b3       	in	r24, 0x18	; 24
     3e2:	84 60       	ori	r24, 0x04	; 4
     3e4:	88 bb       	out	0x18, r24	; 24
     3e6:	08 95       	ret
     3e8:	8d 30       	cpi	r24, 0x0D	; 13
     3ea:	91 05       	cpc	r25, r1
     3ec:	21 f4       	brne	.+8      	; 0x3f6 <pinChange+0x26a>
     3ee:	88 b3       	in	r24, 0x18	; 24
     3f0:	88 60       	ori	r24, 0x08	; 8
     3f2:	88 bb       	out	0x18, r24	; 24
     3f4:	08 95       	ret
     3f6:	8e 30       	cpi	r24, 0x0E	; 14
     3f8:	91 05       	cpc	r25, r1
     3fa:	21 f4       	brne	.+8      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
     3fc:	88 b3       	in	r24, 0x18	; 24
     3fe:	80 61       	ori	r24, 0x10	; 16
     400:	88 bb       	out	0x18, r24	; 24
     402:	08 95       	ret
     404:	8f 30       	cpi	r24, 0x0F	; 15
     406:	91 05       	cpc	r25, r1
     408:	21 f4       	brne	.+8      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
     40a:	88 b3       	in	r24, 0x18	; 24
     40c:	80 62       	ori	r24, 0x20	; 32
     40e:	88 bb       	out	0x18, r24	; 24
     410:	08 95       	ret
     412:	80 31       	cpi	r24, 0x10	; 16
     414:	91 05       	cpc	r25, r1
     416:	21 f4       	brne	.+8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     418:	88 b3       	in	r24, 0x18	; 24
     41a:	80 64       	ori	r24, 0x40	; 64
     41c:	88 bb       	out	0x18, r24	; 24
     41e:	08 95       	ret
     420:	81 31       	cpi	r24, 0x11	; 17
     422:	91 05       	cpc	r25, r1
     424:	21 f4       	brne	.+8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     426:	88 b3       	in	r24, 0x18	; 24
     428:	80 68       	ori	r24, 0x80	; 128
     42a:	88 bb       	out	0x18, r24	; 24
     42c:	08 95       	ret
     42e:	84 31       	cpi	r24, 0x14	; 20
     430:	91 05       	cpc	r25, r1
     432:	21 f4       	brne	.+8      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
     434:	85 b3       	in	r24, 0x15	; 21
     436:	81 60       	ori	r24, 0x01	; 1
     438:	85 bb       	out	0x15, r24	; 21
     43a:	08 95       	ret
     43c:	85 31       	cpi	r24, 0x15	; 21
     43e:	91 05       	cpc	r25, r1
     440:	21 f4       	brne	.+8      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     442:	85 b3       	in	r24, 0x15	; 21
     444:	82 60       	ori	r24, 0x02	; 2
     446:	85 bb       	out	0x15, r24	; 21
     448:	08 95       	ret
     44a:	86 31       	cpi	r24, 0x16	; 22
     44c:	91 05       	cpc	r25, r1
     44e:	21 f4       	brne	.+8      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     450:	85 b3       	in	r24, 0x15	; 21
     452:	84 60       	ori	r24, 0x04	; 4
     454:	85 bb       	out	0x15, r24	; 21
     456:	08 95       	ret
     458:	87 31       	cpi	r24, 0x17	; 23
     45a:	91 05       	cpc	r25, r1
     45c:	21 f4       	brne	.+8      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     45e:	85 b3       	in	r24, 0x15	; 21
     460:	88 60       	ori	r24, 0x08	; 8
     462:	85 bb       	out	0x15, r24	; 21
     464:	08 95       	ret
     466:	88 31       	cpi	r24, 0x18	; 24
     468:	91 05       	cpc	r25, r1
     46a:	21 f4       	brne	.+8      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
     46c:	85 b3       	in	r24, 0x15	; 21
     46e:	80 61       	ori	r24, 0x10	; 16
     470:	85 bb       	out	0x15, r24	; 21
     472:	08 95       	ret
     474:	89 31       	cpi	r24, 0x19	; 25
     476:	91 05       	cpc	r25, r1
     478:	21 f4       	brne	.+8      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     47a:	85 b3       	in	r24, 0x15	; 21
     47c:	80 62       	ori	r24, 0x20	; 32
     47e:	85 bb       	out	0x15, r24	; 21
     480:	08 95       	ret
     482:	8a 31       	cpi	r24, 0x1A	; 26
     484:	91 05       	cpc	r25, r1
     486:	21 f4       	brne	.+8      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
     488:	85 b3       	in	r24, 0x15	; 21
     48a:	80 64       	ori	r24, 0x40	; 64
     48c:	85 bb       	out	0x15, r24	; 21
     48e:	08 95       	ret
     490:	8b 31       	cpi	r24, 0x1B	; 27
     492:	91 05       	cpc	r25, r1
     494:	21 f4       	brne	.+8      	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
     496:	85 b3       	in	r24, 0x15	; 21
     498:	80 68       	ori	r24, 0x80	; 128
     49a:	85 bb       	out	0x15, r24	; 21
     49c:	08 95       	ret
     49e:	8e 31       	cpi	r24, 0x1E	; 30
     4a0:	91 05       	cpc	r25, r1
     4a2:	21 f4       	brne	.+8      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
     4a4:	82 b3       	in	r24, 0x12	; 18
     4a6:	81 60       	ori	r24, 0x01	; 1
     4a8:	82 bb       	out	0x12, r24	; 18
     4aa:	08 95       	ret
     4ac:	8f 31       	cpi	r24, 0x1F	; 31
     4ae:	91 05       	cpc	r25, r1
     4b0:	21 f4       	brne	.+8      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     4b2:	82 b3       	in	r24, 0x12	; 18
     4b4:	82 60       	ori	r24, 0x02	; 2
     4b6:	82 bb       	out	0x12, r24	; 18
     4b8:	08 95       	ret
     4ba:	80 32       	cpi	r24, 0x20	; 32
     4bc:	91 05       	cpc	r25, r1
     4be:	21 f4       	brne	.+8      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
     4c0:	82 b3       	in	r24, 0x12	; 18
     4c2:	84 60       	ori	r24, 0x04	; 4
     4c4:	82 bb       	out	0x12, r24	; 18
     4c6:	08 95       	ret
     4c8:	81 32       	cpi	r24, 0x21	; 33
     4ca:	91 05       	cpc	r25, r1
     4cc:	21 f4       	brne	.+8      	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
     4ce:	82 b3       	in	r24, 0x12	; 18
     4d0:	88 60       	ori	r24, 0x08	; 8
     4d2:	82 bb       	out	0x12, r24	; 18
     4d4:	08 95       	ret
     4d6:	82 32       	cpi	r24, 0x22	; 34
     4d8:	91 05       	cpc	r25, r1
     4da:	21 f4       	brne	.+8      	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
     4dc:	82 b3       	in	r24, 0x12	; 18
     4de:	80 61       	ori	r24, 0x10	; 16
     4e0:	82 bb       	out	0x12, r24	; 18
     4e2:	08 95       	ret
     4e4:	83 32       	cpi	r24, 0x23	; 35
     4e6:	91 05       	cpc	r25, r1
     4e8:	21 f4       	brne	.+8      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
     4ea:	82 b3       	in	r24, 0x12	; 18
     4ec:	80 62       	ori	r24, 0x20	; 32
     4ee:	82 bb       	out	0x12, r24	; 18
     4f0:	08 95       	ret
     4f2:	84 32       	cpi	r24, 0x24	; 36
     4f4:	91 05       	cpc	r25, r1
     4f6:	21 f4       	brne	.+8      	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
     4f8:	82 b3       	in	r24, 0x12	; 18
     4fa:	80 64       	ori	r24, 0x40	; 64
     4fc:	82 bb       	out	0x12, r24	; 18
     4fe:	08 95       	ret
     500:	85 97       	sbiw	r24, 0x25	; 37
     502:	19 f4       	brne	.+6      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
     504:	82 b3       	in	r24, 0x12	; 18
     506:	80 68       	ori	r24, 0x80	; 128
     508:	82 bb       	out	0x12, r24	; 18
     50a:	08 95       	ret

0000050c <Lcd4_Port>:
     50c:	cf 93       	push	r28
     50e:	c8 2f       	mov	r28, r24
     510:	80 ff       	sbrs	r24, 0
     512:	07 c0       	rjmp	.+14     	; 0x522 <Lcd4_Port+0x16>
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	8e e0       	ldi	r24, 0x0E	; 14
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     520:	06 c0       	rjmp	.+12     	; 0x52e <Lcd4_Port+0x22>
     522:	60 e0       	ldi	r22, 0x00	; 0
     524:	70 e0       	ldi	r23, 0x00	; 0
     526:	8e e0       	ldi	r24, 0x0E	; 14
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     52e:	c1 ff       	sbrs	r28, 1
     530:	07 c0       	rjmp	.+14     	; 0x540 <Lcd4_Port+0x34>
     532:	61 e0       	ldi	r22, 0x01	; 1
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	8f e0       	ldi	r24, 0x0F	; 15
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     53e:	06 c0       	rjmp	.+12     	; 0x54c <Lcd4_Port+0x40>
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	70 e0       	ldi	r23, 0x00	; 0
     544:	8f e0       	ldi	r24, 0x0F	; 15
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     54c:	c2 ff       	sbrs	r28, 2
     54e:	07 c0       	rjmp	.+14     	; 0x55e <Lcd4_Port+0x52>
     550:	61 e0       	ldi	r22, 0x01	; 1
     552:	70 e0       	ldi	r23, 0x00	; 0
     554:	80 e1       	ldi	r24, 0x10	; 16
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     55c:	06 c0       	rjmp	.+12     	; 0x56a <Lcd4_Port+0x5e>
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	80 e1       	ldi	r24, 0x10	; 16
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     56a:	c3 ff       	sbrs	r28, 3
     56c:	07 c0       	rjmp	.+14     	; 0x57c <Lcd4_Port+0x70>
     56e:	61 e0       	ldi	r22, 0x01	; 1
     570:	70 e0       	ldi	r23, 0x00	; 0
     572:	81 e1       	ldi	r24, 0x11	; 17
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     57a:	06 c0       	rjmp	.+12     	; 0x588 <Lcd4_Port+0x7c>
     57c:	60 e0       	ldi	r22, 0x00	; 0
     57e:	70 e0       	ldi	r23, 0x00	; 0
     580:	81 e1       	ldi	r24, 0x11	; 17
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <Lcd4_Cmd>:
     58c:	cf 93       	push	r28
     58e:	c8 2f       	mov	r28, r24
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	8a e0       	ldi	r24, 0x0A	; 10
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     59c:	8c 2f       	mov	r24, r28
     59e:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     5a2:	61 e0       	ldi	r22, 0x01	; 1
     5a4:	70 e0       	ldi	r23, 0x00	; 0
     5a6:	8b e0       	ldi	r24, 0x0B	; 11
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5ae:	89 ef       	ldi	r24, 0xF9	; 249
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	01 97       	sbiw	r24, 0x01	; 1
     5b4:	f1 f7       	brne	.-4      	; 0x5b2 <Lcd4_Cmd+0x26>
     5b6:	00 c0       	rjmp	.+0      	; 0x5b8 <Lcd4_Cmd+0x2c>
     5b8:	00 00       	nop
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	8b e0       	ldi	r24, 0x0B	; 11
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5c6:	89 ef       	ldi	r24, 0xF9	; 249
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	01 97       	sbiw	r24, 0x01	; 1
     5cc:	f1 f7       	brne	.-4      	; 0x5ca <Lcd4_Cmd+0x3e>
     5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <Lcd4_Cmd+0x44>
     5d0:	00 00       	nop
     5d2:	cf 91       	pop	r28
     5d4:	08 95       	ret

000005d6 <Lcd4_Clear>:
     5d6:	80 e0       	ldi	r24, 0x00	; 0
     5d8:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     5e2:	08 95       	ret

000005e4 <Lcd4_Set_Cursor>:
     5e4:	cf 93       	push	r28
     5e6:	81 30       	cpi	r24, 0x01	; 1
     5e8:	61 f4       	brne	.+24     	; 0x602 <Lcd4_Set_Cursor+0x1e>
     5ea:	80 e8       	ldi	r24, 0x80	; 128
     5ec:	86 0f       	add	r24, r22
     5ee:	c6 2f       	mov	r28, r22
     5f0:	cf 70       	andi	r28, 0x0F	; 15
     5f2:	82 95       	swap	r24
     5f4:	8f 70       	andi	r24, 0x0F	; 15
     5f6:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     5fa:	8c 2f       	mov	r24, r28
     5fc:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     600:	0d c0       	rjmp	.+26     	; 0x61c <Lcd4_Set_Cursor+0x38>
     602:	82 30       	cpi	r24, 0x02	; 2
     604:	59 f4       	brne	.+22     	; 0x61c <Lcd4_Set_Cursor+0x38>
     606:	80 ec       	ldi	r24, 0xC0	; 192
     608:	86 0f       	add	r24, r22
     60a:	c6 2f       	mov	r28, r22
     60c:	cf 70       	andi	r28, 0x0F	; 15
     60e:	82 95       	swap	r24
     610:	8f 70       	andi	r24, 0x0F	; 15
     612:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     616:	8c 2f       	mov	r24, r28
     618:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     61c:	cf 91       	pop	r28
     61e:	08 95       	ret

00000620 <Lcd4_Init>:
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     626:	87 e8       	ldi	r24, 0x87	; 135
     628:	93 e1       	ldi	r25, 0x13	; 19
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <Lcd4_Init+0xa>
     62e:	00 c0       	rjmp	.+0      	; 0x630 <Lcd4_Init+0x10>
     630:	00 00       	nop
     632:	83 e0       	ldi	r24, 0x03	; 3
     634:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     638:	81 ee       	ldi	r24, 0xE1	; 225
     63a:	94 e0       	ldi	r25, 0x04	; 4
     63c:	01 97       	sbiw	r24, 0x01	; 1
     63e:	f1 f7       	brne	.-4      	; 0x63c <Lcd4_Init+0x1c>
     640:	00 c0       	rjmp	.+0      	; 0x642 <Lcd4_Init+0x22>
     642:	00 00       	nop
     644:	83 e0       	ldi	r24, 0x03	; 3
     646:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     64a:	8d eb       	ldi	r24, 0xBD	; 189
     64c:	9a e0       	ldi	r25, 0x0A	; 10
     64e:	01 97       	sbiw	r24, 0x01	; 1
     650:	f1 f7       	brne	.-4      	; 0x64e <Lcd4_Init+0x2e>
     652:	00 c0       	rjmp	.+0      	; 0x654 <Lcd4_Init+0x34>
     654:	00 00       	nop
     656:	83 e0       	ldi	r24, 0x03	; 3
     658:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     65c:	82 e0       	ldi	r24, 0x02	; 2
     65e:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     662:	82 e0       	ldi	r24, 0x02	; 2
     664:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     668:	88 e0       	ldi	r24, 0x08	; 8
     66a:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     674:	8c e0       	ldi	r24, 0x0C	; 12
     676:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     680:	86 e0       	ldi	r24, 0x06	; 6
     682:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     686:	08 95       	ret

00000688 <Lcd4_Write_Char>:
     688:	cf 93       	push	r28
     68a:	df 93       	push	r29
     68c:	d8 2f       	mov	r29, r24
     68e:	df 70       	andi	r29, 0x0F	; 15
     690:	c8 2f       	mov	r28, r24
     692:	c0 7f       	andi	r28, 0xF0	; 240
     694:	61 e0       	ldi	r22, 0x01	; 1
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	8a e0       	ldi	r24, 0x0A	; 10
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6a0:	8c 2f       	mov	r24, r28
     6a2:	82 95       	swap	r24
     6a4:	8f 70       	andi	r24, 0x0F	; 15
     6a6:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     6aa:	61 e0       	ldi	r22, 0x01	; 1
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	8b e0       	ldi	r24, 0x0B	; 11
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6b6:	89 ef       	ldi	r24, 0xF9	; 249
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	01 97       	sbiw	r24, 0x01	; 1
     6bc:	f1 f7       	brne	.-4      	; 0x6ba <Lcd4_Write_Char+0x32>
     6be:	00 c0       	rjmp	.+0      	; 0x6c0 <Lcd4_Write_Char+0x38>
     6c0:	00 00       	nop
     6c2:	60 e0       	ldi	r22, 0x00	; 0
     6c4:	70 e0       	ldi	r23, 0x00	; 0
     6c6:	8b e0       	ldi	r24, 0x0B	; 11
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6ce:	89 ef       	ldi	r24, 0xF9	; 249
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	01 97       	sbiw	r24, 0x01	; 1
     6d4:	f1 f7       	brne	.-4      	; 0x6d2 <Lcd4_Write_Char+0x4a>
     6d6:	00 c0       	rjmp	.+0      	; 0x6d8 <Lcd4_Write_Char+0x50>
     6d8:	00 00       	nop
     6da:	8d 2f       	mov	r24, r29
     6dc:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     6e0:	61 e0       	ldi	r22, 0x01	; 1
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	8b e0       	ldi	r24, 0x0B	; 11
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6ec:	89 ef       	ldi	r24, 0xF9	; 249
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	01 97       	sbiw	r24, 0x01	; 1
     6f2:	f1 f7       	brne	.-4      	; 0x6f0 <Lcd4_Write_Char+0x68>
     6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <Lcd4_Write_Char+0x6e>
     6f6:	00 00       	nop
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	8b e0       	ldi	r24, 0x0B	; 11
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     704:	89 ef       	ldi	r24, 0xF9	; 249
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	01 97       	sbiw	r24, 0x01	; 1
     70a:	f1 f7       	brne	.-4      	; 0x708 <Lcd4_Write_Char+0x80>
     70c:	00 c0       	rjmp	.+0      	; 0x70e <Lcd4_Write_Char+0x86>
     70e:	00 00       	nop
     710:	df 91       	pop	r29
     712:	cf 91       	pop	r28
     714:	08 95       	ret

00000716 <Lcd4_Write_String>:
     716:	0f 93       	push	r16
     718:	1f 93       	push	r17
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
     71e:	8c 01       	movw	r16, r24
     720:	c0 e0       	ldi	r28, 0x00	; 0
     722:	d0 e0       	ldi	r29, 0x00	; 0
     724:	03 c0       	rjmp	.+6      	; 0x72c <Lcd4_Write_String+0x16>
     726:	0e 94 44 03 	call	0x688	; 0x688 <Lcd4_Write_Char>
     72a:	21 96       	adiw	r28, 0x01	; 1
     72c:	f8 01       	movw	r30, r16
     72e:	ec 0f       	add	r30, r28
     730:	fd 1f       	adc	r31, r29
     732:	80 81       	ld	r24, Z
     734:	81 11       	cpse	r24, r1
     736:	f7 cf       	rjmp	.-18     	; 0x726 <Lcd4_Write_String+0x10>
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	1f 91       	pop	r17
     73e:	0f 91       	pop	r16
     740:	08 95       	ret

00000742 <Lcd4_Shift_Left>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
     742:	81 e0       	ldi	r24, 0x01	; 1
     744:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
	Lcd4_Cmd(0x08);
     748:	88 e0       	ldi	r24, 0x08	; 8
     74a:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     74e:	08 95       	ret

00000750 <UART_init>:
uint16_t voteflag = 0;

void UART_init()
{	
	
	UCSRB = 0b00011000;// Turn on the reception and Transmission
     750:	88 e1       	ldi	r24, 0x18	; 24
     752:	8a b9       	out	0x0a, r24	; 10
	UCSRC = 0b10000110;
     754:	86 e8       	ldi	r24, 0x86	; 134
     756:	80 bd       	out	0x20, r24	; 32
	//UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1);// Use 8-bit character sizes
	UCSRA = 0b00000000;
     758:	1b b8       	out	0x0b, r1	; 11
	UCSRA |= (1 << RXC) | (1<<TXC);
     75a:	8b b1       	in	r24, 0x0b	; 11
     75c:	80 6c       	ori	r24, 0xC0	; 192
     75e:	8b b9       	out	0x0b, r24	; 11
	// | (0<<TXC)|(0<<UDRE)|(0<<FE)|(0<<DOR)|(0<UPE)|(0<<U2X)|(0<<MPCM)

	//UBRRL = BAUD_PRESCALE;		// Load lower 8-bits of the baud rate
	//UBRRH = (BAUD_PRESCALE >> 8);	// Load upper 8-bits
	UBRRL = 0x19;
     760:	89 e1       	ldi	r24, 0x19	; 25
     762:	89 b9       	out	0x09, r24	; 9
	UBRRH = 0x00;
     764:	10 bc       	out	0x20, r1	; 32
     766:	08 95       	ret

00000768 <ADC_init>:
}

void ADC_init()
{
	ADMUX = 0b11000000;
     768:	80 ec       	ldi	r24, 0xC0	; 192
     76a:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000111;
     76c:	87 e8       	ldi	r24, 0x87	; 135
     76e:	86 b9       	out	0x06, r24	; 6
     770:	08 95       	ret

00000772 <ADC_Read>:

float ADC_Read()
{
	float value;
	float volt;
	ADCSRA |= (1 << ADSC);
     772:	86 b1       	in	r24, 0x06	; 6
     774:	80 64       	ori	r24, 0x40	; 64
     776:	86 b9       	out	0x06, r24	; 6
	while( ADCSRA & (1 << ADSC));
     778:	36 99       	sbic	0x06, 6	; 6
     77a:	fe cf       	rjmp	.-4      	; 0x778 <ADC_Read+0x6>
	value = ADCL  | ( 0b00000011 & ADCH) << 8;
     77c:	84 b1       	in	r24, 0x04	; 4
     77e:	65 b1       	in	r22, 0x05	; 5
     780:	63 70       	andi	r22, 0x03	; 3
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	76 2f       	mov	r23, r22
     786:	66 27       	eor	r22, r22
     788:	68 2b       	or	r22, r24
     78a:	07 2e       	mov	r0, r23
     78c:	00 0c       	add	r0, r0
     78e:	88 0b       	sbc	r24, r24
     790:	99 0b       	sbc	r25, r25
     792:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__floatsisf>
	volt = value*2.56/1024; //V
     796:	2a e0       	ldi	r18, 0x0A	; 10
     798:	37 ed       	ldi	r19, 0xD7	; 215
     79a:	43 e2       	ldi	r20, 0x23	; 35
     79c:	50 e4       	ldi	r21, 0x40	; 64
     79e:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     7a2:	20 e0       	ldi	r18, 0x00	; 0
     7a4:	30 e0       	ldi	r19, 0x00	; 0
     7a6:	40 e8       	ldi	r20, 0x80	; 128
     7a8:	5a e3       	ldi	r21, 0x3A	; 58
     7aa:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
	volt = volt*100; //temp
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	48 ec       	ldi	r20, 0xC8	; 200
     7b4:	52 e4       	ldi	r21, 0x42	; 66
     7b6:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
	return volt;
}
     7ba:	08 95       	ret

000007bc <UART_RxChar>:
unsigned char UART_RxChar()
{
	while ((UCSRA & (1 << RXC)) == 0x00);// Wait till data is received
     7bc:	5f 9b       	sbis	0x0b, 7	; 11
     7be:	fe cf       	rjmp	.-4      	; 0x7bc <UART_RxChar>
	return UDR;		// Return the byte
     7c0:	8c b1       	in	r24, 0x0c	; 12
}
     7c2:	08 95       	ret

000007c4 <UART_TxChar>:

void UART_TxChar(unsigned char data){
	while((UCSRA & (1 << UDRE)) == 0x00);
     7c4:	5d 9b       	sbis	0x0b, 5	; 11
     7c6:	fe cf       	rjmp	.-4      	; 0x7c4 <UART_TxChar>
	UDR = data;
     7c8:	8c b9       	out	0x0c, r24	; 12
     7ca:	08 95       	ret

000007cc <__vector_2>:
	
}

volatile int wait = 0;
ISR(INT1_vect){
     7cc:	1f 92       	push	r1
     7ce:	0f 92       	push	r0
     7d0:	0f b6       	in	r0, 0x3f	; 63
     7d2:	0f 92       	push	r0
     7d4:	11 24       	eor	r1, r1
	
	wait = 0;
     7d6:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <__data_end+0x1>
     7da:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <__data_end>

}
     7de:	0f 90       	pop	r0
     7e0:	0f be       	out	0x3f, r0	; 63
     7e2:	0f 90       	pop	r0
     7e4:	1f 90       	pop	r1
     7e6:	18 95       	reti

000007e8 <main>:



int main(void)
{
     7e8:	cf 92       	push	r12
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	cf 93       	push	r28
     7f6:	df 93       	push	r29
     7f8:	cd b7       	in	r28, 0x3d	; 61
     7fa:	de b7       	in	r29, 0x3e	; 62
     7fc:	63 97       	sbiw	r28, 0x13	; 19
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	f8 94       	cli
     802:	de bf       	out	0x3e, r29	; 62
     804:	0f be       	out	0x3f, r0	; 63
     806:	cd bf       	out	0x3d, r28	; 61
   float temp_F;
   char Fahrenheit[5];	
   DDRD = 0b01110110;
     808:	86 e7       	ldi	r24, 0x76	; 118
     80a:	81 bb       	out	0x11, r24	; 17
   DDRB = 0xFF;
     80c:	8f ef       	ldi	r24, 0xFF	; 255
     80e:	87 bb       	out	0x17, r24	; 23
   DDRA = 0x00;
     810:	1a ba       	out	0x1a, r1	; 26
   
   //INTERRUPT
   GICR = (1<<INT1); 
     812:	80 e8       	ldi	r24, 0x80	; 128
     814:	8b bf       	out	0x3b, r24	; 59
   MCUCR = MCUCR & 0b11110011;
     816:	85 b7       	in	r24, 0x35	; 53
     818:	83 7f       	andi	r24, 0xF3	; 243
     81a:	85 bf       	out	0x35, r24	; 53
   sei();
     81c:	78 94       	sei
   
   Lcd4_Init();
     81e:	0e 94 10 03 	call	0x620	; 0x620 <Lcd4_Init>
   UART_init();
     822:	0e 94 a8 03 	call	0x750	; 0x750 <UART_init>
   ADC_init();
     826:	0e 94 b4 03 	call	0x768	; 0x768 <ADC_init>
  
    while (1) 
    {	
		if(wait){
     82a:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
     82e:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
     832:	89 2b       	or	r24, r25
     834:	19 f0       	breq	.+6      	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
			if(!(PIND & (1 << PIND7))){
     836:	87 99       	sbic	0x10, 7	; 16
     838:	f8 cf       	rjmp	.-16     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     83a:	f7 c1       	rjmp	.+1006   	; 0xc2a <__stack+0x3cb>
				break;
			}
			continue;
		}
			
		Lcd4_Clear();
     83c:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
		
		Lcd4_Write_String("Checking temperature..");
     840:	8b eb       	ldi	r24, 0xBB	; 187
     842:	90 e0       	ldi	r25, 0x00	; 0
     844:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     848:	2f e7       	ldi	r18, 0x7F	; 127
     84a:	38 e3       	ldi	r19, 0x38	; 56
     84c:	81 e0       	ldi	r24, 0x01	; 1
     84e:	21 50       	subi	r18, 0x01	; 1
     850:	30 40       	sbci	r19, 0x00	; 0
     852:	80 40       	sbci	r24, 0x00	; 0
     854:	e1 f7       	brne	.-8      	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
     856:	00 c0       	rjmp	.+0      	; 0x858 <__DATA_REGION_LENGTH__+0x58>
     858:	00 00       	nop
		_delay_ms(400);
		for(int i = 0; i < 8; i++){
     85a:	00 e0       	ldi	r16, 0x00	; 0
     85c:	10 e0       	ldi	r17, 0x00	; 0
     85e:	0a c0       	rjmp	.+20     	; 0x874 <__stack+0x15>
			Lcd4_Shift_Left();
     860:	0e 94 a1 03 	call	0x742	; 0x742 <Lcd4_Shift_Left>
     864:	8f e4       	ldi	r24, 0x4F	; 79
     866:	93 ec       	ldi	r25, 0xC3	; 195
     868:	01 97       	sbiw	r24, 0x01	; 1
     86a:	f1 f7       	brne	.-4      	; 0x868 <__stack+0x9>
     86c:	00 c0       	rjmp	.+0      	; 0x86e <__stack+0xf>
     86e:	00 00       	nop
			
		Lcd4_Clear();
		
		Lcd4_Write_String("Checking temperature..");
		_delay_ms(400);
		for(int i = 0; i < 8; i++){
     870:	0f 5f       	subi	r16, 0xFF	; 255
     872:	1f 4f       	sbci	r17, 0xFF	; 255
     874:	08 30       	cpi	r16, 0x08	; 8
     876:	11 05       	cpc	r17, r1
     878:	9c f3       	brlt	.-26     	; 0x860 <__stack+0x1>
     87a:	9f e3       	ldi	r25, 0x3F	; 63
     87c:	2d e0       	ldi	r18, 0x0D	; 13
     87e:	33 e0       	ldi	r19, 0x03	; 3
     880:	91 50       	subi	r25, 0x01	; 1
     882:	20 40       	sbci	r18, 0x00	; 0
     884:	30 40       	sbci	r19, 0x00	; 0
     886:	e1 f7       	brne	.-8      	; 0x880 <__stack+0x21>
     888:	00 c0       	rjmp	.+0      	; 0x88a <__stack+0x2b>
     88a:	00 00       	nop
			Lcd4_Shift_Left();
			_delay_ms(200);
		}
		_delay_ms(1000);
		Lcd4_Clear();
     88c:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
		Lcd4_Write_String("Temperature:");
     890:	82 ed       	ldi	r24, 0xD2	; 210
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     898:	8f e3       	ldi	r24, 0x3F	; 63
     89a:	9d e0       	ldi	r25, 0x0D	; 13
     89c:	23 e0       	ldi	r18, 0x03	; 3
     89e:	81 50       	subi	r24, 0x01	; 1
     8a0:	90 40       	sbci	r25, 0x00	; 0
     8a2:	20 40       	sbci	r18, 0x00	; 0
     8a4:	e1 f7       	brne	.-8      	; 0x89e <__stack+0x3f>
     8a6:	00 c0       	rjmp	.+0      	; 0x8a8 <__stack+0x49>
     8a8:	00 00       	nop
		_delay_ms(1000);
		Lcd4_Set_Cursor(2,0);
     8aa:	60 e0       	ldi	r22, 0x00	; 0
     8ac:	82 e0       	ldi	r24, 0x02	; 2
     8ae:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
		temp_F = ADC_Read();
     8b2:	0e 94 b9 03 	call	0x772	; 0x772 <ADC_Read>
     8b6:	6b 01       	movw	r12, r22
     8b8:	7c 01       	movw	r14, r24
		dtostrf(temp_F,4,2,Fahrenheit);
     8ba:	8e 01       	movw	r16, r28
     8bc:	0f 5f       	subi	r16, 0xFF	; 255
     8be:	1f 4f       	sbci	r17, 0xFF	; 255
     8c0:	22 e0       	ldi	r18, 0x02	; 2
     8c2:	44 e0       	ldi	r20, 0x04	; 4
     8c4:	0e 94 78 07 	call	0xef0	; 0xef0 <dtostrf>
		Lcd4_Write_String(Fahrenheit);
     8c8:	c8 01       	movw	r24, r16
     8ca:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     8ce:	3f e7       	ldi	r19, 0x7F	; 127
     8d0:	8a e1       	ldi	r24, 0x1A	; 26
     8d2:	96 e0       	ldi	r25, 0x06	; 6
     8d4:	31 50       	subi	r19, 0x01	; 1
     8d6:	80 40       	sbci	r24, 0x00	; 0
     8d8:	90 40       	sbci	r25, 0x00	; 0
     8da:	e1 f7       	brne	.-8      	; 0x8d4 <__stack+0x75>
     8dc:	00 c0       	rjmp	.+0      	; 0x8de <__stack+0x7f>
     8de:	00 00       	nop
		_delay_ms(2000);
		if( temp_F >= 99.50){
     8e0:	20 e0       	ldi	r18, 0x00	; 0
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	47 ec       	ldi	r20, 0xC7	; 199
     8e6:	52 e4       	ldi	r21, 0x42	; 66
     8e8:	c7 01       	movw	r24, r14
     8ea:	b6 01       	movw	r22, r12
     8ec:	0e 94 69 06 	call	0xcd2	; 0xcd2 <__gesf2>
     8f0:	88 23       	and	r24, r24
     8f2:	0c f4       	brge	.+2      	; 0x8f6 <__stack+0x97>
     8f4:	41 c0       	rjmp	.+130    	; 0x978 <__stack+0x119>
			Lcd4_Clear();
     8f6:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
			Lcd4_Write_String("Temperature not normal");
     8fa:	8f ed       	ldi	r24, 0xDF	; 223
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
			
			for(int i = 0; i < 8; i++){
     902:	00 e0       	ldi	r16, 0x00	; 0
     904:	10 e0       	ldi	r17, 0x00	; 0
     906:	0a c0       	rjmp	.+20     	; 0x91c <__stack+0xbd>
				Lcd4_Shift_Left();
     908:	0e 94 a1 03 	call	0x742	; 0x742 <Lcd4_Shift_Left>
     90c:	8f e4       	ldi	r24, 0x4F	; 79
     90e:	93 ec       	ldi	r25, 0xC3	; 195
     910:	01 97       	sbiw	r24, 0x01	; 1
     912:	f1 f7       	brne	.-4      	; 0x910 <__stack+0xb1>
     914:	00 c0       	rjmp	.+0      	; 0x916 <__stack+0xb7>
     916:	00 00       	nop
		_delay_ms(2000);
		if( temp_F >= 99.50){
			Lcd4_Clear();
			Lcd4_Write_String("Temperature not normal");
			
			for(int i = 0; i < 8; i++){
     918:	0f 5f       	subi	r16, 0xFF	; 255
     91a:	1f 4f       	sbci	r17, 0xFF	; 255
     91c:	08 30       	cpi	r16, 0x08	; 8
     91e:	11 05       	cpc	r17, r1
     920:	9c f3       	brlt	.-26     	; 0x908 <__stack+0xa9>
     922:	9f e3       	ldi	r25, 0x3F	; 63
     924:	2d e0       	ldi	r18, 0x0D	; 13
     926:	33 e0       	ldi	r19, 0x03	; 3
     928:	91 50       	subi	r25, 0x01	; 1
     92a:	20 40       	sbci	r18, 0x00	; 0
     92c:	30 40       	sbci	r19, 0x00	; 0
     92e:	e1 f7       	brne	.-8      	; 0x928 <__stack+0xc9>
     930:	00 c0       	rjmp	.+0      	; 0x932 <__stack+0xd3>
     932:	00 00       	nop
				Lcd4_Shift_Left();
				_delay_ms(200);
			}
			_delay_ms(1000);
			Lcd4_Clear();
     934:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
			Lcd4_Write_String("You can't vote now");
     938:	86 ef       	ldi	r24, 0xF6	; 246
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
			for(int i = 0; i < 8; i++){
     940:	00 e0       	ldi	r16, 0x00	; 0
     942:	10 e0       	ldi	r17, 0x00	; 0
     944:	0a c0       	rjmp	.+20     	; 0x95a <__stack+0xfb>
				Lcd4_Shift_Left();
     946:	0e 94 a1 03 	call	0x742	; 0x742 <Lcd4_Shift_Left>
     94a:	8f e4       	ldi	r24, 0x4F	; 79
     94c:	93 ec       	ldi	r25, 0xC3	; 195
     94e:	01 97       	sbiw	r24, 0x01	; 1
     950:	f1 f7       	brne	.-4      	; 0x94e <__stack+0xef>
     952:	00 c0       	rjmp	.+0      	; 0x954 <__stack+0xf5>
     954:	00 00       	nop
				_delay_ms(200);
			}
			_delay_ms(1000);
			Lcd4_Clear();
			Lcd4_Write_String("You can't vote now");
			for(int i = 0; i < 8; i++){
     956:	0f 5f       	subi	r16, 0xFF	; 255
     958:	1f 4f       	sbci	r17, 0xFF	; 255
     95a:	08 30       	cpi	r16, 0x08	; 8
     95c:	11 05       	cpc	r17, r1
     95e:	9c f3       	brlt	.-26     	; 0x946 <__stack+0xe7>
				Lcd4_Shift_Left();
				_delay_ms(200);
			}
			Lcd4_Clear();
     960:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
     964:	9f ef       	ldi	r25, 0xFF	; 255
     966:	24 e3       	ldi	r18, 0x34	; 52
     968:	3c e0       	ldi	r19, 0x0C	; 12
     96a:	91 50       	subi	r25, 0x01	; 1
     96c:	20 40       	sbci	r18, 0x00	; 0
     96e:	30 40       	sbci	r19, 0x00	; 0
     970:	e1 f7       	brne	.-8      	; 0x96a <__stack+0x10b>
     972:	00 c0       	rjmp	.+0      	; 0x974 <__stack+0x115>
     974:	00 00       	nop
			_delay_ms(4000);
			continue;
     976:	59 cf       	rjmp	.-334    	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
			
		}
		unsigned char id[10];
	    int count = 1;
	    Lcd4_Clear();
     978:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
	    Lcd4_Write_String("Waiting for  ");
     97c:	89 e0       	ldi	r24, 0x09	; 9
     97e:	91 e0       	ldi	r25, 0x01	; 1
     980:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     984:	8f e9       	ldi	r24, 0x9F	; 159
     986:	96 e8       	ldi	r25, 0x86	; 134
     988:	21 e0       	ldi	r18, 0x01	; 1
     98a:	81 50       	subi	r24, 0x01	; 1
     98c:	90 40       	sbci	r25, 0x00	; 0
     98e:	20 40       	sbci	r18, 0x00	; 0
     990:	e1 f7       	brne	.-8      	; 0x98a <__stack+0x12b>
     992:	00 c0       	rjmp	.+0      	; 0x994 <__stack+0x135>
     994:	00 00       	nop
	    _delay_ms(500);
	    Lcd4_Set_Cursor(2, 1);
     996:	61 e0       	ldi	r22, 0x01	; 1
     998:	82 e0       	ldi	r24, 0x02	; 2
     99a:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
	    Lcd4_Write_String("RFID Tag");
     99e:	87 e1       	ldi	r24, 0x17	; 23
     9a0:	91 e0       	ldi	r25, 0x01	; 1
     9a2:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     9a6:	3f e9       	ldi	r19, 0x9F	; 159
     9a8:	86 e8       	ldi	r24, 0x86	; 134
     9aa:	91 e0       	ldi	r25, 0x01	; 1
     9ac:	31 50       	subi	r19, 0x01	; 1
     9ae:	80 40       	sbci	r24, 0x00	; 0
     9b0:	90 40       	sbci	r25, 0x00	; 0
     9b2:	e1 f7       	brne	.-8      	; 0x9ac <__stack+0x14d>
     9b4:	00 c0       	rjmp	.+0      	; 0x9b6 <__stack+0x157>
     9b6:	00 00       	nop
	    _delay_ms(500);
	    Lcd4_Clear();
     9b8:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
	    
		Lcd4_Write_String("Reading Tag...");
     9bc:	80 e2       	ldi	r24, 0x20	; 32
     9be:	91 e0       	ldi	r25, 0x01	; 1
     9c0:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
	    Lcd4_Set_Cursor(2, 0);
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	82 e0       	ldi	r24, 0x02	; 2
     9c8:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
	    
	    int match = 0;
     9cc:	e1 2c       	mov	r14, r1
     9ce:	f1 2c       	mov	r15, r1
			_delay_ms(4000);
			continue;
			
		}
		unsigned char id[10];
	    int count = 1;
     9d0:	01 e0       	ldi	r16, 0x01	; 1
     9d2:	10 e0       	ldi	r17, 0x00	; 0
	    Lcd4_Set_Cursor(2, 0);
	    
	    int match = 0;
		
		while(1){
			id[count-1] = UART_RxChar();
     9d4:	0e 94 de 03 	call	0x7bc	; 0x7bc <UART_RxChar>
     9d8:	f8 01       	movw	r30, r16
     9da:	31 97       	sbiw	r30, 0x01	; 1
     9dc:	26 e0       	ldi	r18, 0x06	; 6
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	2c 0f       	add	r18, r28
     9e2:	3d 1f       	adc	r19, r29
     9e4:	e2 0f       	add	r30, r18
     9e6:	f3 1f       	adc	r31, r19
     9e8:	80 83       	st	Z, r24
			Lcd4_Write_Char(id[count-1]);
     9ea:	0e 94 44 03 	call	0x688	; 0x688 <Lcd4_Write_Char>
			if(count < id_len){
     9ee:	60 91 aa 00 	lds	r22, 0x00AA	; 0x8000aa <id_len>
     9f2:	70 91 ab 00 	lds	r23, 0x00AB	; 0x8000ab <id_len+0x1>
     9f6:	06 17       	cp	r16, r22
     9f8:	17 07       	cpc	r17, r23
     9fa:	1c f4       	brge	.+6      	; 0xa02 <__stack+0x1a3>
				count++;
     9fc:	0f 5f       	subi	r16, 0xFF	; 255
     9fe:	1f 4f       	sbci	r17, 0xFF	; 255
				continue;
     a00:	e9 cf       	rjmp	.-46     	; 0x9d4 <__stack+0x175>
			}
			else if(count == id_len){
     a02:	06 17       	cp	r16, r22
     a04:	17 07       	cpc	r17, r23
     a06:	09 f0       	breq	.+2      	; 0xa0a <__stack+0x1ab>
     a08:	54 c0       	rjmp	.+168    	; 0xab2 <__stack+0x253>
     a0a:	4a c0       	rjmp	.+148    	; 0xaa0 <__stack+0x241>
				int j;
				for(int i = 0; i<total_id; i++){
					for(j = 0; j<id_len; j++){
						if(valid_id[i][j] != id[j]){
     a0c:	ca 01       	movw	r24, r20
     a0e:	88 0f       	add	r24, r24
     a10:	99 1f       	adc	r25, r25
     a12:	88 0f       	add	r24, r24
     a14:	99 1f       	adc	r25, r25
     a16:	88 0f       	add	r24, r24
     a18:	99 1f       	adc	r25, r25
     a1a:	fa 01       	movw	r30, r20
     a1c:	ee 0f       	add	r30, r30
     a1e:	ff 1f       	adc	r31, r31
     a20:	e8 0f       	add	r30, r24
     a22:	f9 1f       	adc	r31, r25
     a24:	ec 59       	subi	r30, 0x9C	; 156
     a26:	ff 4f       	sbci	r31, 0xFF	; 255
     a28:	e2 0f       	add	r30, r18
     a2a:	f3 1f       	adc	r31, r19
     a2c:	90 81       	ld	r25, Z
     a2e:	e6 e0       	ldi	r30, 0x06	; 6
     a30:	f0 e0       	ldi	r31, 0x00	; 0
     a32:	ec 0f       	add	r30, r28
     a34:	fd 1f       	adc	r31, r29
     a36:	e2 0f       	add	r30, r18
     a38:	f3 1f       	adc	r31, r19
     a3a:	80 81       	ld	r24, Z
     a3c:	98 13       	cpse	r25, r24
     a3e:	08 c0       	rjmp	.+16     	; 0xa50 <__stack+0x1f1>
				continue;
			}
			else if(count == id_len){
				int j;
				for(int i = 0; i<total_id; i++){
					for(j = 0; j<id_len; j++){
     a40:	2f 5f       	subi	r18, 0xFF	; 255
     a42:	3f 4f       	sbci	r19, 0xFF	; 255
     a44:	02 c0       	rjmp	.+4      	; 0xa4a <__stack+0x1eb>
     a46:	20 e0       	ldi	r18, 0x00	; 0
     a48:	30 e0       	ldi	r19, 0x00	; 0
     a4a:	26 17       	cp	r18, r22
     a4c:	37 07       	cpc	r19, r23
     a4e:	f4 f2       	brlt	.-68     	; 0xa0c <__stack+0x1ad>
						if(valid_id[i][j] != id[j]){
							break;
						}
					}
					if(j == id_len){
     a50:	26 17       	cp	r18, r22
     a52:	37 07       	cpc	r19, r23
     a54:	11 f5       	brne	.+68     	; 0xa9a <__stack+0x23b>
						if(!voted[i]){
     a56:	fa 01       	movw	r30, r20
     a58:	ee 0f       	add	r30, r30
     a5a:	ff 1f       	adc	r31, r31
     a5c:	e2 56       	subi	r30, 0x62	; 98
     a5e:	fe 4f       	sbci	r31, 0xFE	; 254
     a60:	80 81       	ld	r24, Z
     a62:	91 81       	ldd	r25, Z+1	; 0x01
     a64:	00 97       	sbiw	r24, 0x00	; 0
     a66:	69 f4       	brne	.+26     	; 0xa82 <__stack+0x223>
							voted[i] = 1;
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	fa 01       	movw	r30, r20
     a6e:	e2 56       	subi	r30, 0x62	; 98
     a70:	fe 4f       	sbci	r31, 0xFE	; 254
     a72:	81 e0       	ldi	r24, 0x01	; 1
     a74:	90 e0       	ldi	r25, 0x00	; 0
     a76:	91 83       	std	Z+1, r25	; 0x01
     a78:	80 83       	st	Z, r24
							match = 1;
     a7a:	ee 24       	eor	r14, r14
     a7c:	e3 94       	inc	r14
     a7e:	f1 2c       	mov	r15, r1
							break;	
     a80:	18 c0       	rjmp	.+48     	; 0xab2 <__stack+0x253>
						}
						else if(voted[i]){
     a82:	89 2b       	or	r24, r25
     a84:	51 f0       	breq	.+20     	; 0xa9a <__stack+0x23b>
							match = 1;
							voteflag = 1;
     a86:	81 e0       	ldi	r24, 0x01	; 1
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <voteflag+0x1>
     a8e:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <voteflag>
							voted[i] = 1;
							match = 1;
							break;	
						}
						else if(voted[i]){
							match = 1;
     a92:	ee 24       	eor	r14, r14
     a94:	e3 94       	inc	r14
     a96:	f1 2c       	mov	r15, r1
							voteflag = 1;
							break;
     a98:	0c c0       	rjmp	.+24     	; 0xab2 <__stack+0x253>
				count++;
				continue;
			}
			else if(count == id_len){
				int j;
				for(int i = 0; i<total_id; i++){
     a9a:	4f 5f       	subi	r20, 0xFF	; 255
     a9c:	5f 4f       	sbci	r21, 0xFF	; 255
     a9e:	02 c0       	rjmp	.+4      	; 0xaa4 <__stack+0x245>
     aa0:	40 e0       	ldi	r20, 0x00	; 0
     aa2:	50 e0       	ldi	r21, 0x00	; 0
     aa4:	80 91 ac 00 	lds	r24, 0x00AC	; 0x8000ac <total_id>
     aa8:	90 91 ad 00 	lds	r25, 0x00AD	; 0x8000ad <total_id+0x1>
     aac:	48 17       	cp	r20, r24
     aae:	59 07       	cpc	r21, r25
     ab0:	54 f2       	brlt	.-108    	; 0xa46 <__stack+0x1e7>
							break;
						}
					}
				}
			}
			if(match == 0){
     ab2:	e1 14       	cp	r14, r1
     ab4:	f1 04       	cpc	r15, r1
     ab6:	c1 f4       	brne	.+48     	; 0xae8 <__stack+0x289>
				Lcd4_Clear();
     ab8:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				Lcd4_Write_String("ID match: ");
     abc:	8f e2       	ldi	r24, 0x2F	; 47
     abe:	91 e0       	ldi	r25, 0x01	; 1
     ac0:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
				Lcd4_Set_Cursor(2,0);
     ac4:	60 e0       	ldi	r22, 0x00	; 0
     ac6:	82 e0       	ldi	r24, 0x02	; 2
     ac8:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
				Lcd4_Write_String("Not found. Reset");
     acc:	8a e3       	ldi	r24, 0x3A	; 58
     ace:	91 e0       	ldi	r25, 0x01	; 1
     ad0:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     ad4:	3f e9       	ldi	r19, 0x9F	; 159
     ad6:	86 e8       	ldi	r24, 0x86	; 134
     ad8:	91 e0       	ldi	r25, 0x01	; 1
     ada:	31 50       	subi	r19, 0x01	; 1
     adc:	80 40       	sbci	r24, 0x00	; 0
     ade:	90 40       	sbci	r25, 0x00	; 0
     ae0:	e1 f7       	brne	.-8      	; 0xada <__stack+0x27b>
     ae2:	00 c0       	rjmp	.+0      	; 0xae4 <__stack+0x285>
     ae4:	00 00       	nop
     ae6:	a1 ce       	rjmp	.-702    	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
				_delay_ms(500);
				break;
			}
			else if(match == 1){
     ae8:	21 e0       	ldi	r18, 0x01	; 1
     aea:	e2 16       	cp	r14, r18
     aec:	f1 04       	cpc	r15, r1
     aee:	09 f0       	breq	.+2      	; 0xaf2 <__stack+0x293>
     af0:	71 cf       	rjmp	.-286    	; 0x9d4 <__stack+0x175>
     af2:	3f e5       	ldi	r19, 0x5F	; 95
     af4:	8a ee       	ldi	r24, 0xEA	; 234
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	31 50       	subi	r19, 0x01	; 1
     afa:	80 40       	sbci	r24, 0x00	; 0
     afc:	90 40       	sbci	r25, 0x00	; 0
     afe:	e1 f7       	brne	.-8      	; 0xaf8 <__stack+0x299>
     b00:	00 c0       	rjmp	.+0      	; 0xb02 <__stack+0x2a3>
     b02:	00 00       	nop
				_delay_ms(300);
				Lcd4_Clear();
     b04:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				if(voteflag){
     b08:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <voteflag>
     b0c:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <voteflag+0x1>
     b10:	89 2b       	or	r24, r25
     b12:	29 f1       	breq	.+74     	; 0xb5e <__stack+0x2ff>
					Lcd4_Write_String("This Person Has");
     b14:	8b e4       	ldi	r24, 0x4B	; 75
     b16:	91 e0       	ldi	r25, 0x01	; 1
     b18:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     b1c:	2f e3       	ldi	r18, 0x3F	; 63
     b1e:	3d e0       	ldi	r19, 0x0D	; 13
     b20:	83 e0       	ldi	r24, 0x03	; 3
     b22:	21 50       	subi	r18, 0x01	; 1
     b24:	30 40       	sbci	r19, 0x00	; 0
     b26:	80 40       	sbci	r24, 0x00	; 0
     b28:	e1 f7       	brne	.-8      	; 0xb22 <__stack+0x2c3>
     b2a:	00 c0       	rjmp	.+0      	; 0xb2c <__stack+0x2cd>
     b2c:	00 00       	nop
					_delay_ms(1000);
					Lcd4_Set_Cursor(2, 0);
     b2e:	60 e0       	ldi	r22, 0x00	; 0
     b30:	82 e0       	ldi	r24, 0x02	; 2
     b32:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
					Lcd4_Write_String("Already Voted");
     b36:	8b e5       	ldi	r24, 0x5B	; 91
     b38:	91 e0       	ldi	r25, 0x01	; 1
     b3a:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     b3e:	9f e1       	ldi	r25, 0x1F	; 31
     b40:	21 ea       	ldi	r18, 0xA1	; 161
     b42:	37 e0       	ldi	r19, 0x07	; 7
     b44:	91 50       	subi	r25, 0x01	; 1
     b46:	20 40       	sbci	r18, 0x00	; 0
     b48:	30 40       	sbci	r19, 0x00	; 0
     b4a:	e1 f7       	brne	.-8      	; 0xb44 <__stack+0x2e5>
     b4c:	00 c0       	rjmp	.+0      	; 0xb4e <__stack+0x2ef>
     b4e:	00 00       	nop
					_delay_ms(2500);
					Lcd4_Clear();
     b50:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
					voteflag = 0;
     b54:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <voteflag+0x1>
     b58:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <voteflag>
					break;
     b5c:	66 ce       	rjmp	.-820    	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
				}
				
				Lcd4_Write_String("ID match found!");
     b5e:	89 e6       	ldi	r24, 0x69	; 105
     b60:	91 e0       	ldi	r25, 0x01	; 1
     b62:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     b66:	8f e7       	ldi	r24, 0x7F	; 127
     b68:	9a e1       	ldi	r25, 0x1A	; 26
     b6a:	26 e0       	ldi	r18, 0x06	; 6
     b6c:	81 50       	subi	r24, 0x01	; 1
     b6e:	90 40       	sbci	r25, 0x00	; 0
     b70:	20 40       	sbci	r18, 0x00	; 0
     b72:	e1 f7       	brne	.-8      	; 0xb6c <__stack+0x30d>
     b74:	00 c0       	rjmp	.+0      	; 0xb76 <__stack+0x317>
     b76:	00 00       	nop
				_delay_ms(2000);
				Lcd4_Clear();
     b78:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				//Generating Random Lock Code
				int lock = rand() % (9999 + 1 - 1000) + 1000;
     b7c:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <rand>
     b80:	68 e2       	ldi	r22, 0x28	; 40
     b82:	73 e2       	ldi	r23, 0x23	; 35
     b84:	0e 94 50 07 	call	0xea0	; 0xea0 <__divmodhi4>
     b88:	88 51       	subi	r24, 0x18	; 24
     b8a:	9c 4f       	sbci	r25, 0xFC	; 252
				unsigned char locks[4];
				
				int mod = 0;
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	30 e0       	ldi	r19, 0x00	; 0
				while(lock != 0){
     b90:	10 c0       	rjmp	.+32     	; 0xbb2 <__stack+0x353>
					locks[mod] = (lock % 10) + '0';
     b92:	6a e0       	ldi	r22, 0x0A	; 10
     b94:	70 e0       	ldi	r23, 0x00	; 0
     b96:	0e 94 50 07 	call	0xea0	; 0xea0 <__divmodhi4>
     b9a:	e0 e1       	ldi	r30, 0x10	; 16
     b9c:	f0 e0       	ldi	r31, 0x00	; 0
     b9e:	ec 0f       	add	r30, r28
     ba0:	fd 1f       	adc	r31, r29
     ba2:	e2 0f       	add	r30, r18
     ba4:	f3 1f       	adc	r31, r19
     ba6:	80 5d       	subi	r24, 0xD0	; 208
     ba8:	80 83       	st	Z, r24
					lock = lock / 10;
     baa:	86 2f       	mov	r24, r22
     bac:	97 2f       	mov	r25, r23
					mod++;
     bae:	2f 5f       	subi	r18, 0xFF	; 255
     bb0:	3f 4f       	sbci	r19, 0xFF	; 255
				//Generating Random Lock Code
				int lock = rand() % (9999 + 1 - 1000) + 1000;
				unsigned char locks[4];
				
				int mod = 0;
				while(lock != 0){
     bb2:	00 97       	sbiw	r24, 0x00	; 0
     bb4:	71 f7       	brne	.-36     	; 0xb92 <__stack+0x333>
					locks[mod] = (lock % 10) + '0';
					lock = lock / 10;
					mod++;
					
				}
				Lcd4_Write_String("Your Lock Code: ");
     bb6:	89 e7       	ldi	r24, 0x79	; 121
     bb8:	91 e0       	ldi	r25, 0x01	; 1
     bba:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
				Lcd4_Set_Cursor(2, 0);
     bbe:	60 e0       	ldi	r22, 0x00	; 0
     bc0:	82 e0       	ldi	r24, 0x02	; 2
     bc2:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
				for(int i = 3; i!=-1; i--){
     bc6:	03 e0       	ldi	r16, 0x03	; 3
     bc8:	10 e0       	ldi	r17, 0x00	; 0
     bca:	15 c0       	rjmp	.+42     	; 0xbf6 <__stack+0x397>
					Lcd4_Write_Char(locks[i]);
     bcc:	e0 e1       	ldi	r30, 0x10	; 16
     bce:	f0 e0       	ldi	r31, 0x00	; 0
     bd0:	ec 0f       	add	r30, r28
     bd2:	fd 1f       	adc	r31, r29
     bd4:	e0 0f       	add	r30, r16
     bd6:	f1 1f       	adc	r31, r17
     bd8:	f0 80       	ld	r15, Z
     bda:	8f 2d       	mov	r24, r15
     bdc:	0e 94 44 03 	call	0x688	; 0x688 <Lcd4_Write_Char>
     be0:	87 ea       	ldi	r24, 0xA7	; 167
     be2:	91 e6       	ldi	r25, 0x61	; 97
     be4:	01 97       	sbiw	r24, 0x01	; 1
     be6:	f1 f7       	brne	.-4      	; 0xbe4 <__stack+0x385>
     be8:	00 c0       	rjmp	.+0      	; 0xbea <__stack+0x38b>
     bea:	00 00       	nop
					_delay_ms(100);
					UART_TxChar(locks[i]);
     bec:	8f 2d       	mov	r24, r15
     bee:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <UART_TxChar>
					mod++;
					
				}
				Lcd4_Write_String("Your Lock Code: ");
				Lcd4_Set_Cursor(2, 0);
				for(int i = 3; i!=-1; i--){
     bf2:	01 50       	subi	r16, 0x01	; 1
     bf4:	11 09       	sbc	r17, r1
     bf6:	0f 3f       	cpi	r16, 0xFF	; 255
     bf8:	9f ef       	ldi	r25, 0xFF	; 255
     bfa:	19 07       	cpc	r17, r25
     bfc:	39 f7       	brne	.-50     	; 0xbcc <__stack+0x36d>
     bfe:	2f e3       	ldi	r18, 0x3F	; 63
     c00:	3d e0       	ldi	r19, 0x0D	; 13
     c02:	83 e0       	ldi	r24, 0x03	; 3
     c04:	21 50       	subi	r18, 0x01	; 1
     c06:	30 40       	sbci	r19, 0x00	; 0
     c08:	80 40       	sbci	r24, 0x00	; 0
     c0a:	e1 f7       	brne	.-8      	; 0xc04 <__stack+0x3a5>
     c0c:	00 c0       	rjmp	.+0      	; 0xc0e <__stack+0x3af>
     c0e:	00 00       	nop
					_delay_ms(100);
					UART_TxChar(locks[i]);
				}
				
				_delay_ms(1000);
				Lcd4_Clear();
     c10:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				Lcd4_Write_String("Please Wait...");
     c14:	8a e8       	ldi	r24, 0x8A	; 138
     c16:	91 e0       	ldi	r25, 0x01	; 1
     c18:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
				wait = 1;
     c1c:	81 e0       	ldi	r24, 0x01	; 1
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <__data_end+0x1>
     c24:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <__data_end>
				break;
     c28:	00 ce       	rjmp	.-1024   	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
  
    while (1) 
    {	
		if(wait){
			if(!(PIND & (1 << PIND7))){
				Lcd4_Clear();
     c2a:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				Lcd4_Write_String("Voting Ended");
     c2e:	8e ea       	ldi	r24, 0xAE	; 174
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
				
			}
		}
		
	}
}
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	63 96       	adiw	r28, 0x13	; 19
     c3c:	0f b6       	in	r0, 0x3f	; 63
     c3e:	f8 94       	cli
     c40:	de bf       	out	0x3e, r29	; 62
     c42:	0f be       	out	0x3f, r0	; 63
     c44:	cd bf       	out	0x3d, r28	; 61
     c46:	df 91       	pop	r29
     c48:	cf 91       	pop	r28
     c4a:	1f 91       	pop	r17
     c4c:	0f 91       	pop	r16
     c4e:	ff 90       	pop	r15
     c50:	ef 90       	pop	r14
     c52:	df 90       	pop	r13
     c54:	cf 90       	pop	r12
     c56:	08 95       	ret

00000c58 <__floatunsisf>:
     c58:	e8 94       	clt
     c5a:	09 c0       	rjmp	.+18     	; 0xc6e <__floatsisf+0x12>

00000c5c <__floatsisf>:
     c5c:	97 fb       	bst	r25, 7
     c5e:	3e f4       	brtc	.+14     	; 0xc6e <__floatsisf+0x12>
     c60:	90 95       	com	r25
     c62:	80 95       	com	r24
     c64:	70 95       	com	r23
     c66:	61 95       	neg	r22
     c68:	7f 4f       	sbci	r23, 0xFF	; 255
     c6a:	8f 4f       	sbci	r24, 0xFF	; 255
     c6c:	9f 4f       	sbci	r25, 0xFF	; 255
     c6e:	99 23       	and	r25, r25
     c70:	a9 f0       	breq	.+42     	; 0xc9c <__floatsisf+0x40>
     c72:	f9 2f       	mov	r31, r25
     c74:	96 e9       	ldi	r25, 0x96	; 150
     c76:	bb 27       	eor	r27, r27
     c78:	93 95       	inc	r25
     c7a:	f6 95       	lsr	r31
     c7c:	87 95       	ror	r24
     c7e:	77 95       	ror	r23
     c80:	67 95       	ror	r22
     c82:	b7 95       	ror	r27
     c84:	f1 11       	cpse	r31, r1
     c86:	f8 cf       	rjmp	.-16     	; 0xc78 <__floatsisf+0x1c>
     c88:	fa f4       	brpl	.+62     	; 0xcc8 <__floatsisf+0x6c>
     c8a:	bb 0f       	add	r27, r27
     c8c:	11 f4       	brne	.+4      	; 0xc92 <__floatsisf+0x36>
     c8e:	60 ff       	sbrs	r22, 0
     c90:	1b c0       	rjmp	.+54     	; 0xcc8 <__floatsisf+0x6c>
     c92:	6f 5f       	subi	r22, 0xFF	; 255
     c94:	7f 4f       	sbci	r23, 0xFF	; 255
     c96:	8f 4f       	sbci	r24, 0xFF	; 255
     c98:	9f 4f       	sbci	r25, 0xFF	; 255
     c9a:	16 c0       	rjmp	.+44     	; 0xcc8 <__floatsisf+0x6c>
     c9c:	88 23       	and	r24, r24
     c9e:	11 f0       	breq	.+4      	; 0xca4 <__floatsisf+0x48>
     ca0:	96 e9       	ldi	r25, 0x96	; 150
     ca2:	11 c0       	rjmp	.+34     	; 0xcc6 <__floatsisf+0x6a>
     ca4:	77 23       	and	r23, r23
     ca6:	21 f0       	breq	.+8      	; 0xcb0 <__floatsisf+0x54>
     ca8:	9e e8       	ldi	r25, 0x8E	; 142
     caa:	87 2f       	mov	r24, r23
     cac:	76 2f       	mov	r23, r22
     cae:	05 c0       	rjmp	.+10     	; 0xcba <__floatsisf+0x5e>
     cb0:	66 23       	and	r22, r22
     cb2:	71 f0       	breq	.+28     	; 0xcd0 <__floatsisf+0x74>
     cb4:	96 e8       	ldi	r25, 0x86	; 134
     cb6:	86 2f       	mov	r24, r22
     cb8:	70 e0       	ldi	r23, 0x00	; 0
     cba:	60 e0       	ldi	r22, 0x00	; 0
     cbc:	2a f0       	brmi	.+10     	; 0xcc8 <__floatsisf+0x6c>
     cbe:	9a 95       	dec	r25
     cc0:	66 0f       	add	r22, r22
     cc2:	77 1f       	adc	r23, r23
     cc4:	88 1f       	adc	r24, r24
     cc6:	da f7       	brpl	.-10     	; 0xcbe <__floatsisf+0x62>
     cc8:	88 0f       	add	r24, r24
     cca:	96 95       	lsr	r25
     ccc:	87 95       	ror	r24
     cce:	97 f9       	bld	r25, 7
     cd0:	08 95       	ret

00000cd2 <__gesf2>:
     cd2:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fp_cmp>
     cd6:	08 f4       	brcc	.+2      	; 0xcda <__gesf2+0x8>
     cd8:	8f ef       	ldi	r24, 0xFF	; 255
     cda:	08 95       	ret

00000cdc <__mulsf3>:
     cdc:	0e 94 81 06 	call	0xd02	; 0xd02 <__mulsf3x>
     ce0:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_round>
     ce4:	0e 94 08 07 	call	0xe10	; 0xe10 <__fp_pscA>
     ce8:	38 f0       	brcs	.+14     	; 0xcf8 <__mulsf3+0x1c>
     cea:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__fp_pscB>
     cee:	20 f0       	brcs	.+8      	; 0xcf8 <__mulsf3+0x1c>
     cf0:	95 23       	and	r25, r21
     cf2:	11 f0       	breq	.+4      	; 0xcf8 <__mulsf3+0x1c>
     cf4:	0c 94 ff 06 	jmp	0xdfe	; 0xdfe <__fp_inf>
     cf8:	0c 94 05 07 	jmp	0xe0a	; 0xe0a <__fp_nan>
     cfc:	11 24       	eor	r1, r1
     cfe:	0c 94 4a 07 	jmp	0xe94	; 0xe94 <__fp_szero>

00000d02 <__mulsf3x>:
     d02:	0e 94 27 07 	call	0xe4e	; 0xe4e <__fp_split3>
     d06:	70 f3       	brcs	.-36     	; 0xce4 <__mulsf3+0x8>

00000d08 <__mulsf3_pse>:
     d08:	95 9f       	mul	r25, r21
     d0a:	c1 f3       	breq	.-16     	; 0xcfc <__mulsf3+0x20>
     d0c:	95 0f       	add	r25, r21
     d0e:	50 e0       	ldi	r21, 0x00	; 0
     d10:	55 1f       	adc	r21, r21
     d12:	62 9f       	mul	r22, r18
     d14:	f0 01       	movw	r30, r0
     d16:	72 9f       	mul	r23, r18
     d18:	bb 27       	eor	r27, r27
     d1a:	f0 0d       	add	r31, r0
     d1c:	b1 1d       	adc	r27, r1
     d1e:	63 9f       	mul	r22, r19
     d20:	aa 27       	eor	r26, r26
     d22:	f0 0d       	add	r31, r0
     d24:	b1 1d       	adc	r27, r1
     d26:	aa 1f       	adc	r26, r26
     d28:	64 9f       	mul	r22, r20
     d2a:	66 27       	eor	r22, r22
     d2c:	b0 0d       	add	r27, r0
     d2e:	a1 1d       	adc	r26, r1
     d30:	66 1f       	adc	r22, r22
     d32:	82 9f       	mul	r24, r18
     d34:	22 27       	eor	r18, r18
     d36:	b0 0d       	add	r27, r0
     d38:	a1 1d       	adc	r26, r1
     d3a:	62 1f       	adc	r22, r18
     d3c:	73 9f       	mul	r23, r19
     d3e:	b0 0d       	add	r27, r0
     d40:	a1 1d       	adc	r26, r1
     d42:	62 1f       	adc	r22, r18
     d44:	83 9f       	mul	r24, r19
     d46:	a0 0d       	add	r26, r0
     d48:	61 1d       	adc	r22, r1
     d4a:	22 1f       	adc	r18, r18
     d4c:	74 9f       	mul	r23, r20
     d4e:	33 27       	eor	r19, r19
     d50:	a0 0d       	add	r26, r0
     d52:	61 1d       	adc	r22, r1
     d54:	23 1f       	adc	r18, r19
     d56:	84 9f       	mul	r24, r20
     d58:	60 0d       	add	r22, r0
     d5a:	21 1d       	adc	r18, r1
     d5c:	82 2f       	mov	r24, r18
     d5e:	76 2f       	mov	r23, r22
     d60:	6a 2f       	mov	r22, r26
     d62:	11 24       	eor	r1, r1
     d64:	9f 57       	subi	r25, 0x7F	; 127
     d66:	50 40       	sbci	r21, 0x00	; 0
     d68:	9a f0       	brmi	.+38     	; 0xd90 <__mulsf3_pse+0x88>
     d6a:	f1 f0       	breq	.+60     	; 0xda8 <__mulsf3_pse+0xa0>
     d6c:	88 23       	and	r24, r24
     d6e:	4a f0       	brmi	.+18     	; 0xd82 <__mulsf3_pse+0x7a>
     d70:	ee 0f       	add	r30, r30
     d72:	ff 1f       	adc	r31, r31
     d74:	bb 1f       	adc	r27, r27
     d76:	66 1f       	adc	r22, r22
     d78:	77 1f       	adc	r23, r23
     d7a:	88 1f       	adc	r24, r24
     d7c:	91 50       	subi	r25, 0x01	; 1
     d7e:	50 40       	sbci	r21, 0x00	; 0
     d80:	a9 f7       	brne	.-22     	; 0xd6c <__mulsf3_pse+0x64>
     d82:	9e 3f       	cpi	r25, 0xFE	; 254
     d84:	51 05       	cpc	r21, r1
     d86:	80 f0       	brcs	.+32     	; 0xda8 <__mulsf3_pse+0xa0>
     d88:	0c 94 ff 06 	jmp	0xdfe	; 0xdfe <__fp_inf>
     d8c:	0c 94 4a 07 	jmp	0xe94	; 0xe94 <__fp_szero>
     d90:	5f 3f       	cpi	r21, 0xFF	; 255
     d92:	e4 f3       	brlt	.-8      	; 0xd8c <__mulsf3_pse+0x84>
     d94:	98 3e       	cpi	r25, 0xE8	; 232
     d96:	d4 f3       	brlt	.-12     	; 0xd8c <__mulsf3_pse+0x84>
     d98:	86 95       	lsr	r24
     d9a:	77 95       	ror	r23
     d9c:	67 95       	ror	r22
     d9e:	b7 95       	ror	r27
     da0:	f7 95       	ror	r31
     da2:	e7 95       	ror	r30
     da4:	9f 5f       	subi	r25, 0xFF	; 255
     da6:	c1 f7       	brne	.-16     	; 0xd98 <__mulsf3_pse+0x90>
     da8:	fe 2b       	or	r31, r30
     daa:	88 0f       	add	r24, r24
     dac:	91 1d       	adc	r25, r1
     dae:	96 95       	lsr	r25
     db0:	87 95       	ror	r24
     db2:	97 f9       	bld	r25, 7
     db4:	08 95       	ret

00000db6 <__fp_cmp>:
     db6:	99 0f       	add	r25, r25
     db8:	00 08       	sbc	r0, r0
     dba:	55 0f       	add	r21, r21
     dbc:	aa 0b       	sbc	r26, r26
     dbe:	e0 e8       	ldi	r30, 0x80	; 128
     dc0:	fe ef       	ldi	r31, 0xFE	; 254
     dc2:	16 16       	cp	r1, r22
     dc4:	17 06       	cpc	r1, r23
     dc6:	e8 07       	cpc	r30, r24
     dc8:	f9 07       	cpc	r31, r25
     dca:	c0 f0       	brcs	.+48     	; 0xdfc <__fp_cmp+0x46>
     dcc:	12 16       	cp	r1, r18
     dce:	13 06       	cpc	r1, r19
     dd0:	e4 07       	cpc	r30, r20
     dd2:	f5 07       	cpc	r31, r21
     dd4:	98 f0       	brcs	.+38     	; 0xdfc <__fp_cmp+0x46>
     dd6:	62 1b       	sub	r22, r18
     dd8:	73 0b       	sbc	r23, r19
     dda:	84 0b       	sbc	r24, r20
     ddc:	95 0b       	sbc	r25, r21
     dde:	39 f4       	brne	.+14     	; 0xdee <__fp_cmp+0x38>
     de0:	0a 26       	eor	r0, r26
     de2:	61 f0       	breq	.+24     	; 0xdfc <__fp_cmp+0x46>
     de4:	23 2b       	or	r18, r19
     de6:	24 2b       	or	r18, r20
     de8:	25 2b       	or	r18, r21
     dea:	21 f4       	brne	.+8      	; 0xdf4 <__fp_cmp+0x3e>
     dec:	08 95       	ret
     dee:	0a 26       	eor	r0, r26
     df0:	09 f4       	brne	.+2      	; 0xdf4 <__fp_cmp+0x3e>
     df2:	a1 40       	sbci	r26, 0x01	; 1
     df4:	a6 95       	lsr	r26
     df6:	8f ef       	ldi	r24, 0xFF	; 255
     df8:	81 1d       	adc	r24, r1
     dfa:	81 1d       	adc	r24, r1
     dfc:	08 95       	ret

00000dfe <__fp_inf>:
     dfe:	97 f9       	bld	r25, 7
     e00:	9f 67       	ori	r25, 0x7F	; 127
     e02:	80 e8       	ldi	r24, 0x80	; 128
     e04:	70 e0       	ldi	r23, 0x00	; 0
     e06:	60 e0       	ldi	r22, 0x00	; 0
     e08:	08 95       	ret

00000e0a <__fp_nan>:
     e0a:	9f ef       	ldi	r25, 0xFF	; 255
     e0c:	80 ec       	ldi	r24, 0xC0	; 192
     e0e:	08 95       	ret

00000e10 <__fp_pscA>:
     e10:	00 24       	eor	r0, r0
     e12:	0a 94       	dec	r0
     e14:	16 16       	cp	r1, r22
     e16:	17 06       	cpc	r1, r23
     e18:	18 06       	cpc	r1, r24
     e1a:	09 06       	cpc	r0, r25
     e1c:	08 95       	ret

00000e1e <__fp_pscB>:
     e1e:	00 24       	eor	r0, r0
     e20:	0a 94       	dec	r0
     e22:	12 16       	cp	r1, r18
     e24:	13 06       	cpc	r1, r19
     e26:	14 06       	cpc	r1, r20
     e28:	05 06       	cpc	r0, r21
     e2a:	08 95       	ret

00000e2c <__fp_round>:
     e2c:	09 2e       	mov	r0, r25
     e2e:	03 94       	inc	r0
     e30:	00 0c       	add	r0, r0
     e32:	11 f4       	brne	.+4      	; 0xe38 <__fp_round+0xc>
     e34:	88 23       	and	r24, r24
     e36:	52 f0       	brmi	.+20     	; 0xe4c <__fp_round+0x20>
     e38:	bb 0f       	add	r27, r27
     e3a:	40 f4       	brcc	.+16     	; 0xe4c <__fp_round+0x20>
     e3c:	bf 2b       	or	r27, r31
     e3e:	11 f4       	brne	.+4      	; 0xe44 <__fp_round+0x18>
     e40:	60 ff       	sbrs	r22, 0
     e42:	04 c0       	rjmp	.+8      	; 0xe4c <__fp_round+0x20>
     e44:	6f 5f       	subi	r22, 0xFF	; 255
     e46:	7f 4f       	sbci	r23, 0xFF	; 255
     e48:	8f 4f       	sbci	r24, 0xFF	; 255
     e4a:	9f 4f       	sbci	r25, 0xFF	; 255
     e4c:	08 95       	ret

00000e4e <__fp_split3>:
     e4e:	57 fd       	sbrc	r21, 7
     e50:	90 58       	subi	r25, 0x80	; 128
     e52:	44 0f       	add	r20, r20
     e54:	55 1f       	adc	r21, r21
     e56:	59 f0       	breq	.+22     	; 0xe6e <__fp_splitA+0x10>
     e58:	5f 3f       	cpi	r21, 0xFF	; 255
     e5a:	71 f0       	breq	.+28     	; 0xe78 <__fp_splitA+0x1a>
     e5c:	47 95       	ror	r20

00000e5e <__fp_splitA>:
     e5e:	88 0f       	add	r24, r24
     e60:	97 fb       	bst	r25, 7
     e62:	99 1f       	adc	r25, r25
     e64:	61 f0       	breq	.+24     	; 0xe7e <__fp_splitA+0x20>
     e66:	9f 3f       	cpi	r25, 0xFF	; 255
     e68:	79 f0       	breq	.+30     	; 0xe88 <__fp_splitA+0x2a>
     e6a:	87 95       	ror	r24
     e6c:	08 95       	ret
     e6e:	12 16       	cp	r1, r18
     e70:	13 06       	cpc	r1, r19
     e72:	14 06       	cpc	r1, r20
     e74:	55 1f       	adc	r21, r21
     e76:	f2 cf       	rjmp	.-28     	; 0xe5c <__fp_split3+0xe>
     e78:	46 95       	lsr	r20
     e7a:	f1 df       	rcall	.-30     	; 0xe5e <__fp_splitA>
     e7c:	08 c0       	rjmp	.+16     	; 0xe8e <__fp_splitA+0x30>
     e7e:	16 16       	cp	r1, r22
     e80:	17 06       	cpc	r1, r23
     e82:	18 06       	cpc	r1, r24
     e84:	99 1f       	adc	r25, r25
     e86:	f1 cf       	rjmp	.-30     	; 0xe6a <__fp_splitA+0xc>
     e88:	86 95       	lsr	r24
     e8a:	71 05       	cpc	r23, r1
     e8c:	61 05       	cpc	r22, r1
     e8e:	08 94       	sec
     e90:	08 95       	ret

00000e92 <__fp_zero>:
     e92:	e8 94       	clt

00000e94 <__fp_szero>:
     e94:	bb 27       	eor	r27, r27
     e96:	66 27       	eor	r22, r22
     e98:	77 27       	eor	r23, r23
     e9a:	cb 01       	movw	r24, r22
     e9c:	97 f9       	bld	r25, 7
     e9e:	08 95       	ret

00000ea0 <__divmodhi4>:
     ea0:	97 fb       	bst	r25, 7
     ea2:	07 2e       	mov	r0, r23
     ea4:	16 f4       	brtc	.+4      	; 0xeaa <__divmodhi4+0xa>
     ea6:	00 94       	com	r0
     ea8:	07 d0       	rcall	.+14     	; 0xeb8 <__divmodhi4_neg1>
     eaa:	77 fd       	sbrc	r23, 7
     eac:	09 d0       	rcall	.+18     	; 0xec0 <__divmodhi4_neg2>
     eae:	0e 94 64 07 	call	0xec8	; 0xec8 <__udivmodhi4>
     eb2:	07 fc       	sbrc	r0, 7
     eb4:	05 d0       	rcall	.+10     	; 0xec0 <__divmodhi4_neg2>
     eb6:	3e f4       	brtc	.+14     	; 0xec6 <__divmodhi4_exit>

00000eb8 <__divmodhi4_neg1>:
     eb8:	90 95       	com	r25
     eba:	81 95       	neg	r24
     ebc:	9f 4f       	sbci	r25, 0xFF	; 255
     ebe:	08 95       	ret

00000ec0 <__divmodhi4_neg2>:
     ec0:	70 95       	com	r23
     ec2:	61 95       	neg	r22
     ec4:	7f 4f       	sbci	r23, 0xFF	; 255

00000ec6 <__divmodhi4_exit>:
     ec6:	08 95       	ret

00000ec8 <__udivmodhi4>:
     ec8:	aa 1b       	sub	r26, r26
     eca:	bb 1b       	sub	r27, r27
     ecc:	51 e1       	ldi	r21, 0x11	; 17
     ece:	07 c0       	rjmp	.+14     	; 0xede <__udivmodhi4_ep>

00000ed0 <__udivmodhi4_loop>:
     ed0:	aa 1f       	adc	r26, r26
     ed2:	bb 1f       	adc	r27, r27
     ed4:	a6 17       	cp	r26, r22
     ed6:	b7 07       	cpc	r27, r23
     ed8:	10 f0       	brcs	.+4      	; 0xede <__udivmodhi4_ep>
     eda:	a6 1b       	sub	r26, r22
     edc:	b7 0b       	sbc	r27, r23

00000ede <__udivmodhi4_ep>:
     ede:	88 1f       	adc	r24, r24
     ee0:	99 1f       	adc	r25, r25
     ee2:	5a 95       	dec	r21
     ee4:	a9 f7       	brne	.-22     	; 0xed0 <__udivmodhi4_loop>
     ee6:	80 95       	com	r24
     ee8:	90 95       	com	r25
     eea:	bc 01       	movw	r22, r24
     eec:	cd 01       	movw	r24, r26
     eee:	08 95       	ret

00000ef0 <dtostrf>:
     ef0:	ef 92       	push	r14
     ef2:	0f 93       	push	r16
     ef4:	1f 93       	push	r17
     ef6:	cf 93       	push	r28
     ef8:	df 93       	push	r29
     efa:	e8 01       	movw	r28, r16
     efc:	47 fd       	sbrc	r20, 7
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <dtostrf+0x14>
     f00:	34 e0       	ldi	r19, 0x04	; 4
     f02:	01 c0       	rjmp	.+2      	; 0xf06 <dtostrf+0x16>
     f04:	34 e1       	ldi	r19, 0x14	; 20
     f06:	04 2e       	mov	r0, r20
     f08:	00 0c       	add	r0, r0
     f0a:	55 0b       	sbc	r21, r21
     f0c:	57 ff       	sbrs	r21, 7
     f0e:	03 c0       	rjmp	.+6      	; 0xf16 <dtostrf+0x26>
     f10:	51 95       	neg	r21
     f12:	41 95       	neg	r20
     f14:	51 09       	sbc	r21, r1
     f16:	e3 2e       	mov	r14, r19
     f18:	02 2f       	mov	r16, r18
     f1a:	24 2f       	mov	r18, r20
     f1c:	ae 01       	movw	r20, r28
     f1e:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <dtoa_prf>
     f22:	ce 01       	movw	r24, r28
     f24:	df 91       	pop	r29
     f26:	cf 91       	pop	r28
     f28:	1f 91       	pop	r17
     f2a:	0f 91       	pop	r16
     f2c:	ef 90       	pop	r14
     f2e:	08 95       	ret

00000f30 <do_rand>:
     f30:	8f 92       	push	r8
     f32:	9f 92       	push	r9
     f34:	af 92       	push	r10
     f36:	bf 92       	push	r11
     f38:	cf 92       	push	r12
     f3a:	df 92       	push	r13
     f3c:	ef 92       	push	r14
     f3e:	ff 92       	push	r15
     f40:	cf 93       	push	r28
     f42:	df 93       	push	r29
     f44:	ec 01       	movw	r28, r24
     f46:	68 81       	ld	r22, Y
     f48:	79 81       	ldd	r23, Y+1	; 0x01
     f4a:	8a 81       	ldd	r24, Y+2	; 0x02
     f4c:	9b 81       	ldd	r25, Y+3	; 0x03
     f4e:	61 15       	cp	r22, r1
     f50:	71 05       	cpc	r23, r1
     f52:	81 05       	cpc	r24, r1
     f54:	91 05       	cpc	r25, r1
     f56:	21 f4       	brne	.+8      	; 0xf60 <do_rand+0x30>
     f58:	64 e2       	ldi	r22, 0x24	; 36
     f5a:	79 ed       	ldi	r23, 0xD9	; 217
     f5c:	8b e5       	ldi	r24, 0x5B	; 91
     f5e:	97 e0       	ldi	r25, 0x07	; 7
     f60:	2d e1       	ldi	r18, 0x1D	; 29
     f62:	33 ef       	ldi	r19, 0xF3	; 243
     f64:	41 e0       	ldi	r20, 0x01	; 1
     f66:	50 e0       	ldi	r21, 0x00	; 0
     f68:	0e 94 26 0a 	call	0x144c	; 0x144c <__divmodsi4>
     f6c:	49 01       	movw	r8, r18
     f6e:	5a 01       	movw	r10, r20
     f70:	9b 01       	movw	r18, r22
     f72:	ac 01       	movw	r20, r24
     f74:	a7 ea       	ldi	r26, 0xA7	; 167
     f76:	b1 e4       	ldi	r27, 0x41	; 65
     f78:	0e 94 45 0a 	call	0x148a	; 0x148a <__muluhisi3>
     f7c:	6b 01       	movw	r12, r22
     f7e:	7c 01       	movw	r14, r24
     f80:	ac ee       	ldi	r26, 0xEC	; 236
     f82:	b4 ef       	ldi	r27, 0xF4	; 244
     f84:	a5 01       	movw	r20, r10
     f86:	94 01       	movw	r18, r8
     f88:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <__mulohisi3>
     f8c:	dc 01       	movw	r26, r24
     f8e:	cb 01       	movw	r24, r22
     f90:	8c 0d       	add	r24, r12
     f92:	9d 1d       	adc	r25, r13
     f94:	ae 1d       	adc	r26, r14
     f96:	bf 1d       	adc	r27, r15
     f98:	b7 ff       	sbrs	r27, 7
     f9a:	03 c0       	rjmp	.+6      	; 0xfa2 <do_rand+0x72>
     f9c:	01 97       	sbiw	r24, 0x01	; 1
     f9e:	a1 09       	sbc	r26, r1
     fa0:	b0 48       	sbci	r27, 0x80	; 128
     fa2:	88 83       	st	Y, r24
     fa4:	99 83       	std	Y+1, r25	; 0x01
     fa6:	aa 83       	std	Y+2, r26	; 0x02
     fa8:	bb 83       	std	Y+3, r27	; 0x03
     faa:	9f 77       	andi	r25, 0x7F	; 127
     fac:	df 91       	pop	r29
     fae:	cf 91       	pop	r28
     fb0:	ff 90       	pop	r15
     fb2:	ef 90       	pop	r14
     fb4:	df 90       	pop	r13
     fb6:	cf 90       	pop	r12
     fb8:	bf 90       	pop	r11
     fba:	af 90       	pop	r10
     fbc:	9f 90       	pop	r9
     fbe:	8f 90       	pop	r8
     fc0:	08 95       	ret

00000fc2 <rand_r>:
     fc2:	0e 94 98 07 	call	0xf30	; 0xf30 <do_rand>
     fc6:	08 95       	ret

00000fc8 <rand>:
     fc8:	80 e6       	ldi	r24, 0x60	; 96
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	0e 94 98 07 	call	0xf30	; 0xf30 <do_rand>
     fd0:	08 95       	ret

00000fd2 <srand>:
     fd2:	a0 e0       	ldi	r26, 0x00	; 0
     fd4:	b0 e0       	ldi	r27, 0x00	; 0
     fd6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     fda:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     fde:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     fe2:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     fe6:	08 95       	ret

00000fe8 <dtoa_prf>:
     fe8:	a9 e0       	ldi	r26, 0x09	; 9
     fea:	b0 e0       	ldi	r27, 0x00	; 0
     fec:	ea ef       	ldi	r30, 0xFA	; 250
     fee:	f7 e0       	ldi	r31, 0x07	; 7
     ff0:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__prologue_saves__+0xc>
     ff4:	6a 01       	movw	r12, r20
     ff6:	12 2f       	mov	r17, r18
     ff8:	b0 2e       	mov	r11, r16
     ffa:	2b e3       	ldi	r18, 0x3B	; 59
     ffc:	20 17       	cp	r18, r16
     ffe:	20 f0       	brcs	.+8      	; 0x1008 <dtoa_prf+0x20>
    1000:	ff 24       	eor	r15, r15
    1002:	f3 94       	inc	r15
    1004:	f0 0e       	add	r15, r16
    1006:	02 c0       	rjmp	.+4      	; 0x100c <dtoa_prf+0x24>
    1008:	2c e3       	ldi	r18, 0x3C	; 60
    100a:	f2 2e       	mov	r15, r18
    100c:	0f 2d       	mov	r16, r15
    100e:	27 e0       	ldi	r18, 0x07	; 7
    1010:	ae 01       	movw	r20, r28
    1012:	4f 5f       	subi	r20, 0xFF	; 255
    1014:	5f 4f       	sbci	r21, 0xFF	; 255
    1016:	0e 94 4e 09 	call	0x129c	; 0x129c <__ftoa_engine>
    101a:	bc 01       	movw	r22, r24
    101c:	49 81       	ldd	r20, Y+1	; 0x01
    101e:	84 2f       	mov	r24, r20
    1020:	89 70       	andi	r24, 0x09	; 9
    1022:	81 30       	cpi	r24, 0x01	; 1
    1024:	31 f0       	breq	.+12     	; 0x1032 <dtoa_prf+0x4a>
    1026:	e1 fc       	sbrc	r14, 1
    1028:	06 c0       	rjmp	.+12     	; 0x1036 <dtoa_prf+0x4e>
    102a:	e0 fe       	sbrs	r14, 0
    102c:	06 c0       	rjmp	.+12     	; 0x103a <dtoa_prf+0x52>
    102e:	90 e2       	ldi	r25, 0x20	; 32
    1030:	05 c0       	rjmp	.+10     	; 0x103c <dtoa_prf+0x54>
    1032:	9d e2       	ldi	r25, 0x2D	; 45
    1034:	03 c0       	rjmp	.+6      	; 0x103c <dtoa_prf+0x54>
    1036:	9b e2       	ldi	r25, 0x2B	; 43
    1038:	01 c0       	rjmp	.+2      	; 0x103c <dtoa_prf+0x54>
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	5e 2d       	mov	r21, r14
    103e:	50 71       	andi	r21, 0x10	; 16
    1040:	43 ff       	sbrs	r20, 3
    1042:	3c c0       	rjmp	.+120    	; 0x10bc <dtoa_prf+0xd4>
    1044:	91 11       	cpse	r25, r1
    1046:	02 c0       	rjmp	.+4      	; 0x104c <dtoa_prf+0x64>
    1048:	83 e0       	ldi	r24, 0x03	; 3
    104a:	01 c0       	rjmp	.+2      	; 0x104e <dtoa_prf+0x66>
    104c:	84 e0       	ldi	r24, 0x04	; 4
    104e:	81 17       	cp	r24, r17
    1050:	18 f4       	brcc	.+6      	; 0x1058 <dtoa_prf+0x70>
    1052:	21 2f       	mov	r18, r17
    1054:	28 1b       	sub	r18, r24
    1056:	01 c0       	rjmp	.+2      	; 0x105a <dtoa_prf+0x72>
    1058:	20 e0       	ldi	r18, 0x00	; 0
    105a:	51 11       	cpse	r21, r1
    105c:	0b c0       	rjmp	.+22     	; 0x1074 <dtoa_prf+0x8c>
    105e:	f6 01       	movw	r30, r12
    1060:	82 2f       	mov	r24, r18
    1062:	30 e2       	ldi	r19, 0x20	; 32
    1064:	88 23       	and	r24, r24
    1066:	19 f0       	breq	.+6      	; 0x106e <dtoa_prf+0x86>
    1068:	31 93       	st	Z+, r19
    106a:	81 50       	subi	r24, 0x01	; 1
    106c:	fb cf       	rjmp	.-10     	; 0x1064 <dtoa_prf+0x7c>
    106e:	c2 0e       	add	r12, r18
    1070:	d1 1c       	adc	r13, r1
    1072:	20 e0       	ldi	r18, 0x00	; 0
    1074:	99 23       	and	r25, r25
    1076:	29 f0       	breq	.+10     	; 0x1082 <dtoa_prf+0x9a>
    1078:	d6 01       	movw	r26, r12
    107a:	9c 93       	st	X, r25
    107c:	f6 01       	movw	r30, r12
    107e:	31 96       	adiw	r30, 0x01	; 1
    1080:	6f 01       	movw	r12, r30
    1082:	c6 01       	movw	r24, r12
    1084:	03 96       	adiw	r24, 0x03	; 3
    1086:	e2 fe       	sbrs	r14, 2
    1088:	0a c0       	rjmp	.+20     	; 0x109e <dtoa_prf+0xb6>
    108a:	3e e4       	ldi	r19, 0x4E	; 78
    108c:	d6 01       	movw	r26, r12
    108e:	3c 93       	st	X, r19
    1090:	41 e4       	ldi	r20, 0x41	; 65
    1092:	11 96       	adiw	r26, 0x01	; 1
    1094:	4c 93       	st	X, r20
    1096:	11 97       	sbiw	r26, 0x01	; 1
    1098:	12 96       	adiw	r26, 0x02	; 2
    109a:	3c 93       	st	X, r19
    109c:	06 c0       	rjmp	.+12     	; 0x10aa <dtoa_prf+0xc2>
    109e:	3e e6       	ldi	r19, 0x6E	; 110
    10a0:	f6 01       	movw	r30, r12
    10a2:	30 83       	st	Z, r19
    10a4:	41 e6       	ldi	r20, 0x61	; 97
    10a6:	41 83       	std	Z+1, r20	; 0x01
    10a8:	32 83       	std	Z+2, r19	; 0x02
    10aa:	fc 01       	movw	r30, r24
    10ac:	32 2f       	mov	r19, r18
    10ae:	40 e2       	ldi	r20, 0x20	; 32
    10b0:	33 23       	and	r19, r19
    10b2:	09 f4       	brne	.+2      	; 0x10b6 <dtoa_prf+0xce>
    10b4:	42 c0       	rjmp	.+132    	; 0x113a <dtoa_prf+0x152>
    10b6:	41 93       	st	Z+, r20
    10b8:	31 50       	subi	r19, 0x01	; 1
    10ba:	fa cf       	rjmp	.-12     	; 0x10b0 <dtoa_prf+0xc8>
    10bc:	42 ff       	sbrs	r20, 2
    10be:	44 c0       	rjmp	.+136    	; 0x1148 <dtoa_prf+0x160>
    10c0:	91 11       	cpse	r25, r1
    10c2:	02 c0       	rjmp	.+4      	; 0x10c8 <dtoa_prf+0xe0>
    10c4:	83 e0       	ldi	r24, 0x03	; 3
    10c6:	01 c0       	rjmp	.+2      	; 0x10ca <dtoa_prf+0xe2>
    10c8:	84 e0       	ldi	r24, 0x04	; 4
    10ca:	81 17       	cp	r24, r17
    10cc:	18 f4       	brcc	.+6      	; 0x10d4 <dtoa_prf+0xec>
    10ce:	21 2f       	mov	r18, r17
    10d0:	28 1b       	sub	r18, r24
    10d2:	01 c0       	rjmp	.+2      	; 0x10d6 <dtoa_prf+0xee>
    10d4:	20 e0       	ldi	r18, 0x00	; 0
    10d6:	51 11       	cpse	r21, r1
    10d8:	0b c0       	rjmp	.+22     	; 0x10f0 <dtoa_prf+0x108>
    10da:	f6 01       	movw	r30, r12
    10dc:	82 2f       	mov	r24, r18
    10de:	30 e2       	ldi	r19, 0x20	; 32
    10e0:	88 23       	and	r24, r24
    10e2:	19 f0       	breq	.+6      	; 0x10ea <dtoa_prf+0x102>
    10e4:	31 93       	st	Z+, r19
    10e6:	81 50       	subi	r24, 0x01	; 1
    10e8:	fb cf       	rjmp	.-10     	; 0x10e0 <dtoa_prf+0xf8>
    10ea:	c2 0e       	add	r12, r18
    10ec:	d1 1c       	adc	r13, r1
    10ee:	20 e0       	ldi	r18, 0x00	; 0
    10f0:	99 23       	and	r25, r25
    10f2:	29 f0       	breq	.+10     	; 0x10fe <dtoa_prf+0x116>
    10f4:	d6 01       	movw	r26, r12
    10f6:	9c 93       	st	X, r25
    10f8:	f6 01       	movw	r30, r12
    10fa:	31 96       	adiw	r30, 0x01	; 1
    10fc:	6f 01       	movw	r12, r30
    10fe:	c6 01       	movw	r24, r12
    1100:	03 96       	adiw	r24, 0x03	; 3
    1102:	e2 fe       	sbrs	r14, 2
    1104:	0b c0       	rjmp	.+22     	; 0x111c <dtoa_prf+0x134>
    1106:	39 e4       	ldi	r19, 0x49	; 73
    1108:	d6 01       	movw	r26, r12
    110a:	3c 93       	st	X, r19
    110c:	3e e4       	ldi	r19, 0x4E	; 78
    110e:	11 96       	adiw	r26, 0x01	; 1
    1110:	3c 93       	st	X, r19
    1112:	11 97       	sbiw	r26, 0x01	; 1
    1114:	36 e4       	ldi	r19, 0x46	; 70
    1116:	12 96       	adiw	r26, 0x02	; 2
    1118:	3c 93       	st	X, r19
    111a:	07 c0       	rjmp	.+14     	; 0x112a <dtoa_prf+0x142>
    111c:	39 e6       	ldi	r19, 0x69	; 105
    111e:	f6 01       	movw	r30, r12
    1120:	30 83       	st	Z, r19
    1122:	3e e6       	ldi	r19, 0x6E	; 110
    1124:	31 83       	std	Z+1, r19	; 0x01
    1126:	36 e6       	ldi	r19, 0x66	; 102
    1128:	32 83       	std	Z+2, r19	; 0x02
    112a:	fc 01       	movw	r30, r24
    112c:	32 2f       	mov	r19, r18
    112e:	40 e2       	ldi	r20, 0x20	; 32
    1130:	33 23       	and	r19, r19
    1132:	19 f0       	breq	.+6      	; 0x113a <dtoa_prf+0x152>
    1134:	41 93       	st	Z+, r20
    1136:	31 50       	subi	r19, 0x01	; 1
    1138:	fb cf       	rjmp	.-10     	; 0x1130 <dtoa_prf+0x148>
    113a:	fc 01       	movw	r30, r24
    113c:	e2 0f       	add	r30, r18
    113e:	f1 1d       	adc	r31, r1
    1140:	10 82       	st	Z, r1
    1142:	8e ef       	ldi	r24, 0xFE	; 254
    1144:	9f ef       	ldi	r25, 0xFF	; 255
    1146:	a6 c0       	rjmp	.+332    	; 0x1294 <dtoa_prf+0x2ac>
    1148:	21 e0       	ldi	r18, 0x01	; 1
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	91 11       	cpse	r25, r1
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <dtoa_prf+0x16c>
    1150:	20 e0       	ldi	r18, 0x00	; 0
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	16 16       	cp	r1, r22
    1156:	17 06       	cpc	r1, r23
    1158:	1c f4       	brge	.+6      	; 0x1160 <dtoa_prf+0x178>
    115a:	fb 01       	movw	r30, r22
    115c:	31 96       	adiw	r30, 0x01	; 1
    115e:	02 c0       	rjmp	.+4      	; 0x1164 <dtoa_prf+0x17c>
    1160:	e1 e0       	ldi	r30, 0x01	; 1
    1162:	f0 e0       	ldi	r31, 0x00	; 0
    1164:	2e 0f       	add	r18, r30
    1166:	3f 1f       	adc	r19, r31
    1168:	bb 20       	and	r11, r11
    116a:	21 f0       	breq	.+8      	; 0x1174 <dtoa_prf+0x18c>
    116c:	eb 2d       	mov	r30, r11
    116e:	f0 e0       	ldi	r31, 0x00	; 0
    1170:	31 96       	adiw	r30, 0x01	; 1
    1172:	02 c0       	rjmp	.+4      	; 0x1178 <dtoa_prf+0x190>
    1174:	e0 e0       	ldi	r30, 0x00	; 0
    1176:	f0 e0       	ldi	r31, 0x00	; 0
    1178:	2e 0f       	add	r18, r30
    117a:	3f 1f       	adc	r19, r31
    117c:	e1 2f       	mov	r30, r17
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	2e 17       	cp	r18, r30
    1182:	3f 07       	cpc	r19, r31
    1184:	1c f4       	brge	.+6      	; 0x118c <dtoa_prf+0x1a4>
    1186:	12 1b       	sub	r17, r18
    1188:	21 2f       	mov	r18, r17
    118a:	01 c0       	rjmp	.+2      	; 0x118e <dtoa_prf+0x1a6>
    118c:	20 e0       	ldi	r18, 0x00	; 0
    118e:	8e 2d       	mov	r24, r14
    1190:	88 71       	andi	r24, 0x18	; 24
    1192:	59 f4       	brne	.+22     	; 0x11aa <dtoa_prf+0x1c2>
    1194:	f6 01       	movw	r30, r12
    1196:	82 2f       	mov	r24, r18
    1198:	30 e2       	ldi	r19, 0x20	; 32
    119a:	88 23       	and	r24, r24
    119c:	19 f0       	breq	.+6      	; 0x11a4 <dtoa_prf+0x1bc>
    119e:	31 93       	st	Z+, r19
    11a0:	81 50       	subi	r24, 0x01	; 1
    11a2:	fb cf       	rjmp	.-10     	; 0x119a <dtoa_prf+0x1b2>
    11a4:	c2 0e       	add	r12, r18
    11a6:	d1 1c       	adc	r13, r1
    11a8:	20 e0       	ldi	r18, 0x00	; 0
    11aa:	99 23       	and	r25, r25
    11ac:	29 f0       	breq	.+10     	; 0x11b8 <dtoa_prf+0x1d0>
    11ae:	d6 01       	movw	r26, r12
    11b0:	9c 93       	st	X, r25
    11b2:	f6 01       	movw	r30, r12
    11b4:	31 96       	adiw	r30, 0x01	; 1
    11b6:	6f 01       	movw	r12, r30
    11b8:	51 11       	cpse	r21, r1
    11ba:	0b c0       	rjmp	.+22     	; 0x11d2 <dtoa_prf+0x1ea>
    11bc:	f6 01       	movw	r30, r12
    11be:	82 2f       	mov	r24, r18
    11c0:	90 e3       	ldi	r25, 0x30	; 48
    11c2:	88 23       	and	r24, r24
    11c4:	19 f0       	breq	.+6      	; 0x11cc <dtoa_prf+0x1e4>
    11c6:	91 93       	st	Z+, r25
    11c8:	81 50       	subi	r24, 0x01	; 1
    11ca:	fb cf       	rjmp	.-10     	; 0x11c2 <dtoa_prf+0x1da>
    11cc:	c2 0e       	add	r12, r18
    11ce:	d1 1c       	adc	r13, r1
    11d0:	20 e0       	ldi	r18, 0x00	; 0
    11d2:	0f 2d       	mov	r16, r15
    11d4:	06 0f       	add	r16, r22
    11d6:	9a 81       	ldd	r25, Y+2	; 0x02
    11d8:	34 2f       	mov	r19, r20
    11da:	30 71       	andi	r19, 0x10	; 16
    11dc:	44 ff       	sbrs	r20, 4
    11de:	03 c0       	rjmp	.+6      	; 0x11e6 <dtoa_prf+0x1fe>
    11e0:	91 33       	cpi	r25, 0x31	; 49
    11e2:	09 f4       	brne	.+2      	; 0x11e6 <dtoa_prf+0x1fe>
    11e4:	01 50       	subi	r16, 0x01	; 1
    11e6:	10 16       	cp	r1, r16
    11e8:	24 f4       	brge	.+8      	; 0x11f2 <dtoa_prf+0x20a>
    11ea:	09 30       	cpi	r16, 0x09	; 9
    11ec:	18 f0       	brcs	.+6      	; 0x11f4 <dtoa_prf+0x20c>
    11ee:	08 e0       	ldi	r16, 0x08	; 8
    11f0:	01 c0       	rjmp	.+2      	; 0x11f4 <dtoa_prf+0x20c>
    11f2:	01 e0       	ldi	r16, 0x01	; 1
    11f4:	ab 01       	movw	r20, r22
    11f6:	77 ff       	sbrs	r23, 7
    11f8:	02 c0       	rjmp	.+4      	; 0x11fe <dtoa_prf+0x216>
    11fa:	40 e0       	ldi	r20, 0x00	; 0
    11fc:	50 e0       	ldi	r21, 0x00	; 0
    11fe:	fb 01       	movw	r30, r22
    1200:	e4 1b       	sub	r30, r20
    1202:	f5 0b       	sbc	r31, r21
    1204:	a1 e0       	ldi	r26, 0x01	; 1
    1206:	b0 e0       	ldi	r27, 0x00	; 0
    1208:	ac 0f       	add	r26, r28
    120a:	bd 1f       	adc	r27, r29
    120c:	ea 0f       	add	r30, r26
    120e:	fb 1f       	adc	r31, r27
    1210:	8e e2       	ldi	r24, 0x2E	; 46
    1212:	a8 2e       	mov	r10, r24
    1214:	4b 01       	movw	r8, r22
    1216:	80 1a       	sub	r8, r16
    1218:	91 08       	sbc	r9, r1
    121a:	0b 2d       	mov	r16, r11
    121c:	10 e0       	ldi	r17, 0x00	; 0
    121e:	11 95       	neg	r17
    1220:	01 95       	neg	r16
    1222:	11 09       	sbc	r17, r1
    1224:	4f 3f       	cpi	r20, 0xFF	; 255
    1226:	bf ef       	ldi	r27, 0xFF	; 255
    1228:	5b 07       	cpc	r21, r27
    122a:	21 f4       	brne	.+8      	; 0x1234 <dtoa_prf+0x24c>
    122c:	d6 01       	movw	r26, r12
    122e:	ac 92       	st	X, r10
    1230:	11 96       	adiw	r26, 0x01	; 1
    1232:	6d 01       	movw	r12, r26
    1234:	64 17       	cp	r22, r20
    1236:	75 07       	cpc	r23, r21
    1238:	2c f0       	brlt	.+10     	; 0x1244 <dtoa_prf+0x25c>
    123a:	84 16       	cp	r8, r20
    123c:	95 06       	cpc	r9, r21
    123e:	14 f4       	brge	.+4      	; 0x1244 <dtoa_prf+0x25c>
    1240:	81 81       	ldd	r24, Z+1	; 0x01
    1242:	01 c0       	rjmp	.+2      	; 0x1246 <dtoa_prf+0x25e>
    1244:	80 e3       	ldi	r24, 0x30	; 48
    1246:	41 50       	subi	r20, 0x01	; 1
    1248:	51 09       	sbc	r21, r1
    124a:	31 96       	adiw	r30, 0x01	; 1
    124c:	d6 01       	movw	r26, r12
    124e:	11 96       	adiw	r26, 0x01	; 1
    1250:	7d 01       	movw	r14, r26
    1252:	40 17       	cp	r20, r16
    1254:	51 07       	cpc	r21, r17
    1256:	24 f0       	brlt	.+8      	; 0x1260 <dtoa_prf+0x278>
    1258:	d6 01       	movw	r26, r12
    125a:	8c 93       	st	X, r24
    125c:	67 01       	movw	r12, r14
    125e:	e2 cf       	rjmp	.-60     	; 0x1224 <dtoa_prf+0x23c>
    1260:	64 17       	cp	r22, r20
    1262:	75 07       	cpc	r23, r21
    1264:	39 f4       	brne	.+14     	; 0x1274 <dtoa_prf+0x28c>
    1266:	96 33       	cpi	r25, 0x36	; 54
    1268:	20 f4       	brcc	.+8      	; 0x1272 <dtoa_prf+0x28a>
    126a:	95 33       	cpi	r25, 0x35	; 53
    126c:	19 f4       	brne	.+6      	; 0x1274 <dtoa_prf+0x28c>
    126e:	31 11       	cpse	r19, r1
    1270:	01 c0       	rjmp	.+2      	; 0x1274 <dtoa_prf+0x28c>
    1272:	81 e3       	ldi	r24, 0x31	; 49
    1274:	f6 01       	movw	r30, r12
    1276:	80 83       	st	Z, r24
    1278:	f7 01       	movw	r30, r14
    127a:	82 2f       	mov	r24, r18
    127c:	90 e2       	ldi	r25, 0x20	; 32
    127e:	88 23       	and	r24, r24
    1280:	19 f0       	breq	.+6      	; 0x1288 <dtoa_prf+0x2a0>
    1282:	91 93       	st	Z+, r25
    1284:	81 50       	subi	r24, 0x01	; 1
    1286:	fb cf       	rjmp	.-10     	; 0x127e <dtoa_prf+0x296>
    1288:	f7 01       	movw	r30, r14
    128a:	e2 0f       	add	r30, r18
    128c:	f1 1d       	adc	r31, r1
    128e:	10 82       	st	Z, r1
    1290:	80 e0       	ldi	r24, 0x00	; 0
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	29 96       	adiw	r28, 0x09	; 9
    1296:	ec e0       	ldi	r30, 0x0C	; 12
    1298:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__epilogue_restores__+0xc>

0000129c <__ftoa_engine>:
    129c:	28 30       	cpi	r18, 0x08	; 8
    129e:	08 f0       	brcs	.+2      	; 0x12a2 <__ftoa_engine+0x6>
    12a0:	27 e0       	ldi	r18, 0x07	; 7
    12a2:	33 27       	eor	r19, r19
    12a4:	da 01       	movw	r26, r20
    12a6:	99 0f       	add	r25, r25
    12a8:	31 1d       	adc	r19, r1
    12aa:	87 fd       	sbrc	r24, 7
    12ac:	91 60       	ori	r25, 0x01	; 1
    12ae:	00 96       	adiw	r24, 0x00	; 0
    12b0:	61 05       	cpc	r22, r1
    12b2:	71 05       	cpc	r23, r1
    12b4:	39 f4       	brne	.+14     	; 0x12c4 <__ftoa_engine+0x28>
    12b6:	32 60       	ori	r19, 0x02	; 2
    12b8:	2e 5f       	subi	r18, 0xFE	; 254
    12ba:	3d 93       	st	X+, r19
    12bc:	30 e3       	ldi	r19, 0x30	; 48
    12be:	2a 95       	dec	r18
    12c0:	e1 f7       	brne	.-8      	; 0x12ba <__ftoa_engine+0x1e>
    12c2:	08 95       	ret
    12c4:	9f 3f       	cpi	r25, 0xFF	; 255
    12c6:	30 f0       	brcs	.+12     	; 0x12d4 <__ftoa_engine+0x38>
    12c8:	80 38       	cpi	r24, 0x80	; 128
    12ca:	71 05       	cpc	r23, r1
    12cc:	61 05       	cpc	r22, r1
    12ce:	09 f0       	breq	.+2      	; 0x12d2 <__ftoa_engine+0x36>
    12d0:	3c 5f       	subi	r19, 0xFC	; 252
    12d2:	3c 5f       	subi	r19, 0xFC	; 252
    12d4:	3d 93       	st	X+, r19
    12d6:	91 30       	cpi	r25, 0x01	; 1
    12d8:	08 f0       	brcs	.+2      	; 0x12dc <__ftoa_engine+0x40>
    12da:	80 68       	ori	r24, 0x80	; 128
    12dc:	91 1d       	adc	r25, r1
    12de:	df 93       	push	r29
    12e0:	cf 93       	push	r28
    12e2:	1f 93       	push	r17
    12e4:	0f 93       	push	r16
    12e6:	ff 92       	push	r15
    12e8:	ef 92       	push	r14
    12ea:	19 2f       	mov	r17, r25
    12ec:	98 7f       	andi	r25, 0xF8	; 248
    12ee:	96 95       	lsr	r25
    12f0:	e9 2f       	mov	r30, r25
    12f2:	96 95       	lsr	r25
    12f4:	96 95       	lsr	r25
    12f6:	e9 0f       	add	r30, r25
    12f8:	ff 27       	eor	r31, r31
    12fa:	e2 55       	subi	r30, 0x52	; 82
    12fc:	ff 4f       	sbci	r31, 0xFF	; 255
    12fe:	99 27       	eor	r25, r25
    1300:	33 27       	eor	r19, r19
    1302:	ee 24       	eor	r14, r14
    1304:	ff 24       	eor	r15, r15
    1306:	a7 01       	movw	r20, r14
    1308:	e7 01       	movw	r28, r14
    130a:	05 90       	lpm	r0, Z+
    130c:	08 94       	sec
    130e:	07 94       	ror	r0
    1310:	28 f4       	brcc	.+10     	; 0x131c <__ftoa_engine+0x80>
    1312:	36 0f       	add	r19, r22
    1314:	e7 1e       	adc	r14, r23
    1316:	f8 1e       	adc	r15, r24
    1318:	49 1f       	adc	r20, r25
    131a:	51 1d       	adc	r21, r1
    131c:	66 0f       	add	r22, r22
    131e:	77 1f       	adc	r23, r23
    1320:	88 1f       	adc	r24, r24
    1322:	99 1f       	adc	r25, r25
    1324:	06 94       	lsr	r0
    1326:	a1 f7       	brne	.-24     	; 0x1310 <__ftoa_engine+0x74>
    1328:	05 90       	lpm	r0, Z+
    132a:	07 94       	ror	r0
    132c:	28 f4       	brcc	.+10     	; 0x1338 <__ftoa_engine+0x9c>
    132e:	e7 0e       	add	r14, r23
    1330:	f8 1e       	adc	r15, r24
    1332:	49 1f       	adc	r20, r25
    1334:	56 1f       	adc	r21, r22
    1336:	c1 1d       	adc	r28, r1
    1338:	77 0f       	add	r23, r23
    133a:	88 1f       	adc	r24, r24
    133c:	99 1f       	adc	r25, r25
    133e:	66 1f       	adc	r22, r22
    1340:	06 94       	lsr	r0
    1342:	a1 f7       	brne	.-24     	; 0x132c <__ftoa_engine+0x90>
    1344:	05 90       	lpm	r0, Z+
    1346:	07 94       	ror	r0
    1348:	28 f4       	brcc	.+10     	; 0x1354 <__ftoa_engine+0xb8>
    134a:	f8 0e       	add	r15, r24
    134c:	49 1f       	adc	r20, r25
    134e:	56 1f       	adc	r21, r22
    1350:	c7 1f       	adc	r28, r23
    1352:	d1 1d       	adc	r29, r1
    1354:	88 0f       	add	r24, r24
    1356:	99 1f       	adc	r25, r25
    1358:	66 1f       	adc	r22, r22
    135a:	77 1f       	adc	r23, r23
    135c:	06 94       	lsr	r0
    135e:	a1 f7       	brne	.-24     	; 0x1348 <__ftoa_engine+0xac>
    1360:	05 90       	lpm	r0, Z+
    1362:	07 94       	ror	r0
    1364:	20 f4       	brcc	.+8      	; 0x136e <__ftoa_engine+0xd2>
    1366:	49 0f       	add	r20, r25
    1368:	56 1f       	adc	r21, r22
    136a:	c7 1f       	adc	r28, r23
    136c:	d8 1f       	adc	r29, r24
    136e:	99 0f       	add	r25, r25
    1370:	66 1f       	adc	r22, r22
    1372:	77 1f       	adc	r23, r23
    1374:	88 1f       	adc	r24, r24
    1376:	06 94       	lsr	r0
    1378:	a9 f7       	brne	.-22     	; 0x1364 <__ftoa_engine+0xc8>
    137a:	84 91       	lpm	r24, Z
    137c:	10 95       	com	r17
    137e:	17 70       	andi	r17, 0x07	; 7
    1380:	41 f0       	breq	.+16     	; 0x1392 <__ftoa_engine+0xf6>
    1382:	d6 95       	lsr	r29
    1384:	c7 95       	ror	r28
    1386:	57 95       	ror	r21
    1388:	47 95       	ror	r20
    138a:	f7 94       	ror	r15
    138c:	e7 94       	ror	r14
    138e:	1a 95       	dec	r17
    1390:	c1 f7       	brne	.-16     	; 0x1382 <__ftoa_engine+0xe6>
    1392:	e4 e5       	ldi	r30, 0x54	; 84
    1394:	f0 e0       	ldi	r31, 0x00	; 0
    1396:	68 94       	set
    1398:	15 90       	lpm	r1, Z+
    139a:	15 91       	lpm	r17, Z+
    139c:	35 91       	lpm	r19, Z+
    139e:	65 91       	lpm	r22, Z+
    13a0:	95 91       	lpm	r25, Z+
    13a2:	05 90       	lpm	r0, Z+
    13a4:	7f e2       	ldi	r23, 0x2F	; 47
    13a6:	73 95       	inc	r23
    13a8:	e1 18       	sub	r14, r1
    13aa:	f1 0a       	sbc	r15, r17
    13ac:	43 0b       	sbc	r20, r19
    13ae:	56 0b       	sbc	r21, r22
    13b0:	c9 0b       	sbc	r28, r25
    13b2:	d0 09       	sbc	r29, r0
    13b4:	c0 f7       	brcc	.-16     	; 0x13a6 <__ftoa_engine+0x10a>
    13b6:	e1 0c       	add	r14, r1
    13b8:	f1 1e       	adc	r15, r17
    13ba:	43 1f       	adc	r20, r19
    13bc:	56 1f       	adc	r21, r22
    13be:	c9 1f       	adc	r28, r25
    13c0:	d0 1d       	adc	r29, r0
    13c2:	7e f4       	brtc	.+30     	; 0x13e2 <__ftoa_engine+0x146>
    13c4:	70 33       	cpi	r23, 0x30	; 48
    13c6:	11 f4       	brne	.+4      	; 0x13cc <__ftoa_engine+0x130>
    13c8:	8a 95       	dec	r24
    13ca:	e6 cf       	rjmp	.-52     	; 0x1398 <__ftoa_engine+0xfc>
    13cc:	e8 94       	clt
    13ce:	01 50       	subi	r16, 0x01	; 1
    13d0:	30 f0       	brcs	.+12     	; 0x13de <__ftoa_engine+0x142>
    13d2:	08 0f       	add	r16, r24
    13d4:	0a f4       	brpl	.+2      	; 0x13d8 <__ftoa_engine+0x13c>
    13d6:	00 27       	eor	r16, r16
    13d8:	02 17       	cp	r16, r18
    13da:	08 f4       	brcc	.+2      	; 0x13de <__ftoa_engine+0x142>
    13dc:	20 2f       	mov	r18, r16
    13de:	23 95       	inc	r18
    13e0:	02 2f       	mov	r16, r18
    13e2:	7a 33       	cpi	r23, 0x3A	; 58
    13e4:	28 f0       	brcs	.+10     	; 0x13f0 <__ftoa_engine+0x154>
    13e6:	79 e3       	ldi	r23, 0x39	; 57
    13e8:	7d 93       	st	X+, r23
    13ea:	2a 95       	dec	r18
    13ec:	e9 f7       	brne	.-6      	; 0x13e8 <__ftoa_engine+0x14c>
    13ee:	10 c0       	rjmp	.+32     	; 0x1410 <__ftoa_engine+0x174>
    13f0:	7d 93       	st	X+, r23
    13f2:	2a 95       	dec	r18
    13f4:	89 f6       	brne	.-94     	; 0x1398 <__ftoa_engine+0xfc>
    13f6:	06 94       	lsr	r0
    13f8:	97 95       	ror	r25
    13fa:	67 95       	ror	r22
    13fc:	37 95       	ror	r19
    13fe:	17 95       	ror	r17
    1400:	17 94       	ror	r1
    1402:	e1 18       	sub	r14, r1
    1404:	f1 0a       	sbc	r15, r17
    1406:	43 0b       	sbc	r20, r19
    1408:	56 0b       	sbc	r21, r22
    140a:	c9 0b       	sbc	r28, r25
    140c:	d0 09       	sbc	r29, r0
    140e:	98 f0       	brcs	.+38     	; 0x1436 <__ftoa_engine+0x19a>
    1410:	23 95       	inc	r18
    1412:	7e 91       	ld	r23, -X
    1414:	73 95       	inc	r23
    1416:	7a 33       	cpi	r23, 0x3A	; 58
    1418:	08 f0       	brcs	.+2      	; 0x141c <__ftoa_engine+0x180>
    141a:	70 e3       	ldi	r23, 0x30	; 48
    141c:	7c 93       	st	X, r23
    141e:	20 13       	cpse	r18, r16
    1420:	b8 f7       	brcc	.-18     	; 0x1410 <__ftoa_engine+0x174>
    1422:	7e 91       	ld	r23, -X
    1424:	70 61       	ori	r23, 0x10	; 16
    1426:	7d 93       	st	X+, r23
    1428:	30 f0       	brcs	.+12     	; 0x1436 <__ftoa_engine+0x19a>
    142a:	83 95       	inc	r24
    142c:	71 e3       	ldi	r23, 0x31	; 49
    142e:	7d 93       	st	X+, r23
    1430:	70 e3       	ldi	r23, 0x30	; 48
    1432:	2a 95       	dec	r18
    1434:	e1 f7       	brne	.-8      	; 0x142e <__ftoa_engine+0x192>
    1436:	11 24       	eor	r1, r1
    1438:	ef 90       	pop	r14
    143a:	ff 90       	pop	r15
    143c:	0f 91       	pop	r16
    143e:	1f 91       	pop	r17
    1440:	cf 91       	pop	r28
    1442:	df 91       	pop	r29
    1444:	99 27       	eor	r25, r25
    1446:	87 fd       	sbrc	r24, 7
    1448:	90 95       	com	r25
    144a:	08 95       	ret

0000144c <__divmodsi4>:
    144c:	05 2e       	mov	r0, r21
    144e:	97 fb       	bst	r25, 7
    1450:	1e f4       	brtc	.+6      	; 0x1458 <__divmodsi4+0xc>
    1452:	00 94       	com	r0
    1454:	0e 94 3d 0a 	call	0x147a	; 0x147a <__negsi2>
    1458:	57 fd       	sbrc	r21, 7
    145a:	07 d0       	rcall	.+14     	; 0x146a <__divmodsi4_neg2>
    145c:	0e 94 8f 0a 	call	0x151e	; 0x151e <__udivmodsi4>
    1460:	07 fc       	sbrc	r0, 7
    1462:	03 d0       	rcall	.+6      	; 0x146a <__divmodsi4_neg2>
    1464:	4e f4       	brtc	.+18     	; 0x1478 <__divmodsi4_exit>
    1466:	0c 94 3d 0a 	jmp	0x147a	; 0x147a <__negsi2>

0000146a <__divmodsi4_neg2>:
    146a:	50 95       	com	r21
    146c:	40 95       	com	r20
    146e:	30 95       	com	r19
    1470:	21 95       	neg	r18
    1472:	3f 4f       	sbci	r19, 0xFF	; 255
    1474:	4f 4f       	sbci	r20, 0xFF	; 255
    1476:	5f 4f       	sbci	r21, 0xFF	; 255

00001478 <__divmodsi4_exit>:
    1478:	08 95       	ret

0000147a <__negsi2>:
    147a:	90 95       	com	r25
    147c:	80 95       	com	r24
    147e:	70 95       	com	r23
    1480:	61 95       	neg	r22
    1482:	7f 4f       	sbci	r23, 0xFF	; 255
    1484:	8f 4f       	sbci	r24, 0xFF	; 255
    1486:	9f 4f       	sbci	r25, 0xFF	; 255
    1488:	08 95       	ret

0000148a <__muluhisi3>:
    148a:	0e 94 b1 0a 	call	0x1562	; 0x1562 <__umulhisi3>
    148e:	a5 9f       	mul	r26, r21
    1490:	90 0d       	add	r25, r0
    1492:	b4 9f       	mul	r27, r20
    1494:	90 0d       	add	r25, r0
    1496:	a4 9f       	mul	r26, r20
    1498:	80 0d       	add	r24, r0
    149a:	91 1d       	adc	r25, r1
    149c:	11 24       	eor	r1, r1
    149e:	08 95       	ret

000014a0 <__mulshisi3>:
    14a0:	b7 ff       	sbrs	r27, 7
    14a2:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__muluhisi3>

000014a6 <__mulohisi3>:
    14a6:	0e 94 45 0a 	call	0x148a	; 0x148a <__muluhisi3>
    14aa:	82 1b       	sub	r24, r18
    14ac:	93 0b       	sbc	r25, r19
    14ae:	08 95       	ret

000014b0 <__prologue_saves__>:
    14b0:	2f 92       	push	r2
    14b2:	3f 92       	push	r3
    14b4:	4f 92       	push	r4
    14b6:	5f 92       	push	r5
    14b8:	6f 92       	push	r6
    14ba:	7f 92       	push	r7
    14bc:	8f 92       	push	r8
    14be:	9f 92       	push	r9
    14c0:	af 92       	push	r10
    14c2:	bf 92       	push	r11
    14c4:	cf 92       	push	r12
    14c6:	df 92       	push	r13
    14c8:	ef 92       	push	r14
    14ca:	ff 92       	push	r15
    14cc:	0f 93       	push	r16
    14ce:	1f 93       	push	r17
    14d0:	cf 93       	push	r28
    14d2:	df 93       	push	r29
    14d4:	cd b7       	in	r28, 0x3d	; 61
    14d6:	de b7       	in	r29, 0x3e	; 62
    14d8:	ca 1b       	sub	r28, r26
    14da:	db 0b       	sbc	r29, r27
    14dc:	0f b6       	in	r0, 0x3f	; 63
    14de:	f8 94       	cli
    14e0:	de bf       	out	0x3e, r29	; 62
    14e2:	0f be       	out	0x3f, r0	; 63
    14e4:	cd bf       	out	0x3d, r28	; 61
    14e6:	09 94       	ijmp

000014e8 <__epilogue_restores__>:
    14e8:	2a 88       	ldd	r2, Y+18	; 0x12
    14ea:	39 88       	ldd	r3, Y+17	; 0x11
    14ec:	48 88       	ldd	r4, Y+16	; 0x10
    14ee:	5f 84       	ldd	r5, Y+15	; 0x0f
    14f0:	6e 84       	ldd	r6, Y+14	; 0x0e
    14f2:	7d 84       	ldd	r7, Y+13	; 0x0d
    14f4:	8c 84       	ldd	r8, Y+12	; 0x0c
    14f6:	9b 84       	ldd	r9, Y+11	; 0x0b
    14f8:	aa 84       	ldd	r10, Y+10	; 0x0a
    14fa:	b9 84       	ldd	r11, Y+9	; 0x09
    14fc:	c8 84       	ldd	r12, Y+8	; 0x08
    14fe:	df 80       	ldd	r13, Y+7	; 0x07
    1500:	ee 80       	ldd	r14, Y+6	; 0x06
    1502:	fd 80       	ldd	r15, Y+5	; 0x05
    1504:	0c 81       	ldd	r16, Y+4	; 0x04
    1506:	1b 81       	ldd	r17, Y+3	; 0x03
    1508:	aa 81       	ldd	r26, Y+2	; 0x02
    150a:	b9 81       	ldd	r27, Y+1	; 0x01
    150c:	ce 0f       	add	r28, r30
    150e:	d1 1d       	adc	r29, r1
    1510:	0f b6       	in	r0, 0x3f	; 63
    1512:	f8 94       	cli
    1514:	de bf       	out	0x3e, r29	; 62
    1516:	0f be       	out	0x3f, r0	; 63
    1518:	cd bf       	out	0x3d, r28	; 61
    151a:	ed 01       	movw	r28, r26
    151c:	08 95       	ret

0000151e <__udivmodsi4>:
    151e:	a1 e2       	ldi	r26, 0x21	; 33
    1520:	1a 2e       	mov	r1, r26
    1522:	aa 1b       	sub	r26, r26
    1524:	bb 1b       	sub	r27, r27
    1526:	fd 01       	movw	r30, r26
    1528:	0d c0       	rjmp	.+26     	; 0x1544 <__udivmodsi4_ep>

0000152a <__udivmodsi4_loop>:
    152a:	aa 1f       	adc	r26, r26
    152c:	bb 1f       	adc	r27, r27
    152e:	ee 1f       	adc	r30, r30
    1530:	ff 1f       	adc	r31, r31
    1532:	a2 17       	cp	r26, r18
    1534:	b3 07       	cpc	r27, r19
    1536:	e4 07       	cpc	r30, r20
    1538:	f5 07       	cpc	r31, r21
    153a:	20 f0       	brcs	.+8      	; 0x1544 <__udivmodsi4_ep>
    153c:	a2 1b       	sub	r26, r18
    153e:	b3 0b       	sbc	r27, r19
    1540:	e4 0b       	sbc	r30, r20
    1542:	f5 0b       	sbc	r31, r21

00001544 <__udivmodsi4_ep>:
    1544:	66 1f       	adc	r22, r22
    1546:	77 1f       	adc	r23, r23
    1548:	88 1f       	adc	r24, r24
    154a:	99 1f       	adc	r25, r25
    154c:	1a 94       	dec	r1
    154e:	69 f7       	brne	.-38     	; 0x152a <__udivmodsi4_loop>
    1550:	60 95       	com	r22
    1552:	70 95       	com	r23
    1554:	80 95       	com	r24
    1556:	90 95       	com	r25
    1558:	9b 01       	movw	r18, r22
    155a:	ac 01       	movw	r20, r24
    155c:	bd 01       	movw	r22, r26
    155e:	cf 01       	movw	r24, r30
    1560:	08 95       	ret

00001562 <__umulhisi3>:
    1562:	a2 9f       	mul	r26, r18
    1564:	b0 01       	movw	r22, r0
    1566:	b3 9f       	mul	r27, r19
    1568:	c0 01       	movw	r24, r0
    156a:	a3 9f       	mul	r26, r19
    156c:	70 0d       	add	r23, r0
    156e:	81 1d       	adc	r24, r1
    1570:	11 24       	eor	r1, r1
    1572:	91 1d       	adc	r25, r1
    1574:	b2 9f       	mul	r27, r18
    1576:	70 0d       	add	r23, r0
    1578:	81 1d       	adc	r24, r1
    157a:	11 24       	eor	r1, r1
    157c:	91 1d       	adc	r25, r1
    157e:	08 95       	ret

00001580 <_exit>:
    1580:	f8 94       	cli

00001582 <__stop_program>:
    1582:	ff cf       	rjmp	.-2      	; 0x1582 <__stop_program>
